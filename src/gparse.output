Terminals unused in grammar

   COMMENTS
   INT_ASSIGNS
   INITINTS
   INTEGERS


Grammar

    0 $accept: input $end

    1 input: input line
    2      | line

    3 line: '\n'
    4     | END '\n'
    5     | GRAPH '\n'
    6     | edges '\n'
    7     | node '\n'
    8     | NAME ID '\n'
    9     | INPUTS inputs '\n'
   10     | OUTPUTS outputs '\n'
   11     | INTERNAL internals '\n'
   12     | ATACS VARIABLES variables '\n'
   13     | DUMMYS dummys '\n'
   14     | ATACS DUMMYS dummys '\n'
   15     | ATACS FAILTRANS failtrans '\n'
   16     | ATACS NONDISABLING nondisabling '\n'
   17     | ATACS KEEPS keeps '\n'
   18     | ATACS ABSTRACTS abstracts '\n'
   19     | ATACS NONINPS noninps '\n'
   20     | ATACS CONTINUOUS continuous '\n'
   21     | ATACS PROPERTY property '\n'
   22     | ATACS INIT_STATE init_state '\n'
   23     | ATACS MARKING marking '\n'
   24     | ATACS INITRATES init_rates '\n'
   25     | ATACS INITVALS init_vals '\n'
   26     | ATACS RATES rates '\n'
   27     | ATACS INVARIANTS invariants '\n'
   28     | ATACS ENABLINGS enables '\n'
   29     | ATACS ASSIGNS assigns '\n'
   30     | ATACS RATE_ASSIGNS rate_assigns '\n'
   31     | ATACS DELAY_ASSIGNS delay_assigns '\n'
   32     | ATACS PRIORITY_ASSIGNS priority_assigns '\n'
   33     | ATACS TRANS_RATES transition_rates '\n'
   34     | ATACS BOOL_ASSIGNS bool_assigns '\n'
   35     | MARKING marking '\n'
   36     | ATACS VERIFY '{' vevents '}' '\n'

   37 @1: %empty

   38 line: ATACS SEARCH @1 '{' sevents '}' '\n'

   39 inputs: %empty
   40       | inputs ID

   41 outputs: %empty
   42        | outputs ID

   43 internals: %empty
   44          | internals ID

   45 variables: %empty
   46          | variables ID

   47 variable: ID

   48 dummys: %empty
   49       | dummys ID
   50       | dummys ID '+'
   51       | dummys ID '-'

   52 failtrans: %empty
   53          | failtrans ID

   54 nondisabling: %empty
   55             | nondisabling ID

   56 keeps: %empty
   57      | keeps ID

   58 abstracts: %empty
   59          | abstracts ID

   60 noninps: %empty
   61        | noninps ID

   62 continuous: %empty
   63           | continuous ID
   64           | continuous ID '[' '-' INF ',' '-' INTEGER ']'
   65           | continuous ID '[' '-' INTEGER ',' '-' INTEGER ']'
   66           | continuous ID '[' '-' INF ',' INTEGER ']'
   67           | continuous ID '[' '-' INTEGER ',' INTEGER ']'
   68           | continuous ID '[' INTEGER ',' INTEGER ']'
   69           | continuous ID '[' '-' INF ',' INF ']'
   70           | continuous ID '[' '-' INTEGER ',' INF ']'
   71           | continuous ID '[' INTEGER ',' INF ']'

   72 property: probproperty
   73         | props

   74 probproperty: hsf
   75             | Pr relop REAL '{' probprop '}'
   76             | Pr '=' '?' '{' probprop '}'
   77             | Ss relop REAL '{' probproperty '}'
   78             | Ss '=' '?' '{' probproperty '}'

   79 probprop: PG bound '(' probproperty ')'
   80         | PF bound '(' probproperty ')'
   81         | PX '(' probproperty ')'
   82         | probproperty PU bound probproperty

   83 props: prop andprop
   84      | prop orprop
   85      | prop impliesprop
   86      | prop

   87 andprop: andprop '&' prop
   88        | '&' prop

   89 orprop: orprop '|' prop
   90       | '|' prop

   91 impliesprop: impliesprop '-' '>' prop
   92            | '-' '>' prop

   93 prop: fronttype bound '(' prop ')'
   94     | fronttype bound '(' hsf ')'
   95     | midprop

   96 midprop: '{' propinner '}'

   97 propinner: prop midtype bound prop
   98          | prop midtype bound hsf
   99          | hsf midtype bound prop
  100          | hsf midtype bound hsf

  101 fronttype: AG
  102          | AF
  103          | EG
  104          | EF

  105 midtype: AU
  106        | EU

  107 bound: '[' relop hsf ']'
  108      | '[' hsf ',' hsf ']'
  109      | %empty

  110 init_state: '[' INTEGER ']'
  111           | '[' ID ']'
  112           | '[' ']'

  113 place: ID

  114 marking: '{' marking_set '}'

  115 marking_set: marking_set mark
  116            | mark

  117 mark: '<' signal_trans ',' signal_trans '>'
  118     | '<' place ',' signal_trans '>'
  119     | '<' signal_trans ',' place '>'
  120     | '<' place ',' place '>'
  121     | place
  122     | '<' place '=' INTEGER '>'
  123     | '<' place '=' '-' INTEGER '>'
  124     | '<' place '=' '[' '-' INF ',' '-' INTEGER ']' '>'
  125     | '<' place '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  126     | '<' place '=' '[' '-' INF ',' INTEGER ']' '>'
  127     | '<' place '=' '[' '-' INTEGER ',' INTEGER ']' '>'
  128     | '<' place '=' '[' INTEGER ',' INTEGER ']' '>'
  129     | '<' place '=' '[' '-' INF ',' INF ']' '>'
  130     | '<' place '=' '[' '-' INTEGER ',' INF ']' '>'
  131     | '<' place '=' '[' INTEGER ',' INF ']' '>'

  132 init_rates: '{' init_rates_set '}'

  133 init_rates_set: init_rates_set init_rate
  134               | %empty

  135 init_rate: '<' variable '=' INTEGER '>'
  136          | '<' variable '=' '-' INTEGER '>'
  137          | '<' variable '=' '[' '-' INF ',' '-' INTEGER ']' '>'
  138          | '<' variable '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  139          | '<' variable '=' '[' '-' INF ',' INTEGER ']' '>'
  140          | '<' variable '=' '[' '-' INTEGER ',' INTEGER ']' '>'
  141          | '<' variable '=' '[' INTEGER ',' INTEGER ']' '>'
  142          | '<' variable '=' '[' '-' INF ',' INF ']' '>'
  143          | '<' variable '=' '[' '-' INTEGER ':' INF ']' '>'
  144          | '<' variable '=' '[' INTEGER ',' INF ']' '>'

  145 init_vals: '{' init_vals_set '}'

  146 init_vals_set: init_vals_set init_val
  147              | %empty

  148 init_val: '<' variable '=' INTEGER '>'
  149         | '<' variable '=' '-' INTEGER '>'
  150         | '<' variable '=' '[' '-' INF ',' '-' INTEGER ']' '>'
  151         | '<' variable '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  152         | '<' variable '=' '[' '-' INF ',' INTEGER ']' '>'
  153         | '<' variable '=' '[' '-' INTEGER ',' INTEGER ']' '>'
  154         | '<' variable '=' '[' INTEGER ',' INTEGER ']' '>'
  155         | '<' variable '=' '[' '-' INF ',' INF ']' '>'
  156         | '<' variable '=' '[' '-' INTEGER ',' INF ']' '>'
  157         | '<' variable '=' '[' INTEGER ',' INF ']' '>'

  158 rates: '{' rate_set '}'

  159 rate_set: rate_set trate
  160         | %empty

  161 trate: '<' place '=' INTEGER '>'
  162      | '<' place '=' '[' INTEGER ',' INTEGER ']' '>'

  163 invariants: '{' invariant_set '}'

  164 invariant_set: invariant_set invariant
  165              | %empty

  166 invariant: '<' place '=' '[' hsf_ineqs ']' '>'

  167 edges: edge

  168 edge: edge node
  169     | node node
  170     | node node ATACS cons expr plow pup lower upper rate weight
  171     | node node ATACS cons exprd plow pup lower upper rate weight

  172 cons: %empty
  173     | '{' ID '}'

  174 expr: %empty
  175     | '(' hsf ')'

  176 hsf: hsf '|' andexpr
  177    | hsf IMPLIC andexpr
  178    | andexpr

  179 andexpr: andexpr '&' relation
  180        | relation

  181 relation: '~' relation
  182         | BIT '(' arithexpr ',' arithexpr ')'
  183         | arithexpr relop arithexpr
  184         | arithexpr

  185 arithexpr: arithexpr '+' multexpr
  186          | arithexpr '-' multexpr
  187          | multexpr

  188 multexpr: multexpr ID
  189         | multexpr '*' term
  190         | multexpr '/' term
  191         | multexpr '%' term
  192         | multexpr '^' term
  193         | term

  194 term: '(' hsf ')'
  195     | RATE '(' ID ')'
  196     | INT '(' hsf ')'
  197     | ID
  198     | '-' term
  199     | BOOL_FALSE
  200     | BOOL_TRUE
  201     | unop '(' arithexpr ')'
  202     | binop '(' arithexpr ',' arithexpr ')'
  203     | INTEGER
  204     | REAL
  205     | INF

  206 relop: '='
  207      | '<'
  208      | '<' '='
  209      | '>'
  210      | '>' '='

  211 unop: NOT
  212     | EXPONENTIAL
  213     | CHISQ
  214     | LAPLACE
  215     | CAUCHY
  216     | RAYLEIGH
  217     | POISSON
  218     | BERNOULLI
  219     | BOOL
  220     | FLOOR
  221     | CEIL

  222 binop: OR
  223      | AND
  224      | XOR
  225      | UNIFORM
  226      | NORMAL
  227      | GAMMA
  228      | LOGNORMAL
  229      | BINOMIAL
  230      | MINF
  231      | MAXF
  232      | IDIV

  233 ineqs: ineqs ';' ineq
  234      | ineq

  235 hsf_ineqs: hsf_ineqs ';' hsf
  236          | hsf

  237 rate_ineqs: rate_ineqs ';' rate_ineq
  238           | rate_ineq

  239 ineq: place ASSIGN hsf

  240 rate_ineq: place ASSIGN hsf

  241 exprd: '(' hsf DISABLE

  242 plow: %empty
  243     | '/' INTEGER
  244     | '\\' INTEGER
  245     | '/' '-' INTEGER
  246     | '\\' '-' INTEGER
  247     | '/' '-' INF
  248     | '\\' '-' INF

  249 pup: %empty
  250    | ';' '-' INTEGER '\\'
  251    | ';' '-' INTEGER '/'
  252    | ';' INTEGER '\\'
  253    | ';' INTEGER '/'
  254    | ';' INF '\\'
  255    | ';' INF '/'

  256 lower: %empty
  257      | '[' INTEGER

  258 upper: %empty
  259      | ',' INTEGER ']'
  260      | ',' INF ']'

  261 rate: %empty
  262     | REAL

  263 weight: %empty
  264       | INTEGER

  265 node: signal_trans
  266     | place

  267 signal_trans: ID '+'
  268             | ID '+' '/' INTEGER
  269             | ID '-'
  270             | ID '-' '/' INTEGER

  271 enables: '{' enable_set '}'

  272 enable_set: enable_set enable
  273           | %empty

  274 enable: '<' node '=' '[' hsf_ineqs ']' '>'

  275 assigns: '{' assign_set '}'

  276 assign_set: assign_set assign
  277           | %empty

  278 assign: '<' node '=' '[' ineqs ']' '>'

  279 rate_assigns: '{' rate_assign_set '}'

  280 rate_assign_set: rate_assign_set rate_assign
  281                | %empty

  282 rate_assign: '<' node '=' '[' rate_ineqs ']' '>'

  283 delay_assigns: '{' delay_assign_set '}'

  284 delay_assign_set: delay_assign_set delay_assign
  285                 | %empty

  286 delay_assign: '<' node '=' UNIFORM '(' INTEGER ',' INTEGER ')' '>'
  287             | '<' node '=' UNIFORM '(' INTEGER ',' INF ')' '>'
  288             | '<' node '=' EXPONENTIAL '(' hsf ')' '>'
  289             | '<' node '=' '[' INTEGER ',' INTEGER ']' '>'
  290             | '<' node '=' '[' INTEGER ',' INF ']' '>'
  291             | '<' node '=' INTEGER '>'
  292             | '<' node '=' '[' hsf ']' '>'

  293 priority_assigns: '{' priority_assign_set '}'

  294 priority_assign_set: priority_assign_set priority_assign
  295                    | %empty

  296 priority_assign: '<' node '=' '[' hsf ']' '>'

  297 transition_rates: '{' transition_rate_set '}'

  298 transition_rate_set: transition_rate_set transition_rate
  299                    | %empty

  300 transition_rate: '<' node '=' '[' hsf ']' '>'

  301 bool_assigns: '{' bool_assign_set '}'

  302 bool_assign_set: bool_assign_set bool_assign
  303                | %empty

  304 bool_assign: '<' node '=' '[' bool_ineqs ']' '>'

  305 bool_ineqs: bool_ineqs ';' bool_ineq
  306           | bool_ineq

  307 bool_ineq: ID ASSIGN hsf

  308 vevents: vevents ',' vevent
  309        | vevent

  310 vevent: ID
  311       | NOT ID
  312       | signal_trans
  313       | NOT signal_trans

  314 sevents: sevents ',' sevent
  315        | sevent

  316 sevent: ID
  317       | NOT ID
  318       | signal_trans
  319       | NOT signal_trans


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
    25 26 27 28 29 30 31 32 33 34 35 36 38
'%' (37) 191
'&' (38) 87 88 179
'(' (40) 79 80 81 93 94 175 182 194 195 196 201 202 241 286 287 288
')' (41) 79 80 81 93 94 175 182 194 195 196 201 202 286 287 288
'*' (42) 189
'+' (43) 50 185 267 268
',' (44) 64 65 66 67 68 69 70 71 108 117 118 119 120 124 125 126 127
    128 129 130 131 137 138 139 140 141 142 144 150 151 152 153 154
    155 156 157 162 182 202 259 260 286 287 289 290 308 314
'-' (45) 51 64 65 66 67 69 70 91 92 123 124 125 126 127 129 130 136
    137 138 139 140 142 143 149 150 151 152 153 155 156 186 198 245
    246 247 248 250 251 269 270
'/' (47) 190 243 245 247 251 253 255 268 270
':' (58) 143
';' (59) 233 235 237 250 251 252 253 254 255 305
'<' (60) 117 118 119 120 122 123 124 125 126 127 128 129 130 131 135
    136 137 138 139 140 141 142 143 144 148 149 150 151 152 153 154
    155 156 157 161 162 166 207 208 274 278 282 286 287 288 289 290
    291 292 296 300 304
'=' (61) 76 78 122 123 124 125 126 127 128 129 130 131 135 136 137
    138 139 140 141 142 143 144 148 149 150 151 152 153 154 155 156
    157 161 162 166 206 208 210 274 278 282 286 287 288 289 290 291
    292 296 300 304
'>' (62) 91 92 117 118 119 120 122 123 124 125 126 127 128 129 130
    131 135 136 137 138 139 140 141 142 143 144 148 149 150 151 152
    153 154 155 156 157 161 162 166 209 210 274 278 282 286 287 288
    289 290 291 292 296 300 304
'?' (63) 76 78
'[' (91) 64 65 66 67 68 69 70 71 107 108 110 111 112 124 125 126 127
    128 129 130 131 137 138 139 140 141 142 143 144 150 151 152 153
    154 155 156 157 162 166 257 274 278 282 289 290 292 296 300 304
'\\' (92) 244 246 248 250 252 254
']' (93) 64 65 66 67 68 69 70 71 107 108 110 111 112 124 125 126 127
    128 129 130 131 137 138 139 140 141 142 143 144 150 151 152 153
    154 155 156 157 162 166 259 260 274 278 282 289 290 292 296 300
    304
'^' (94) 192
'{' (123) 36 38 75 76 77 78 96 114 132 145 158 163 173 271 275 279
    283 293 297 301
'|' (124) 89 90 176
'}' (125) 36 38 75 76 77 78 96 114 132 145 158 163 173 271 275 279
    283 293 297 301
'~' (126) 181
error (256)
IDIV (258) 232
MINF (259) 230
MAXF (260) 231
FLOOR (261) 220
CEIL (262) 221
COMMENTS (263)
ID (264) 8 40 42 44 46 47 49 50 51 53 55 57 59 61 63 64 65 66 67 68
    69 70 71 111 113 173 188 195 197 267 268 269 270 307 310 311 316
    317
INPUTS (265) 9
OUTPUTS (266) 10
INTERNAL (267) 11
GRAPH (268) 5
END (269) 4
INTEGER (270) 64 65 66 67 68 70 71 110 122 123 124 125 126 127 128
    130 131 135 136 137 138 139 140 141 143 144 148 149 150 151 152
    153 154 156 157 161 162 203 243 244 245 246 250 251 252 253 257
    259 264 268 270 286 287 289 290 291
MARKING (271) 23 35
NAME (272) 8
INIT_STATE (273) 22
DUMMYS (274) 13 14
ATACS (275) 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 34 36 38 170 171
DISABLE (276) 241
NOT (277) 211 311 313 317 319
VERIFY (278) 36
SEARCH (279) 38
REAL (280) 75 77 204 262
INF (281) 64 66 69 70 71 124 126 129 130 131 137 139 142 143 144 150
    152 155 156 157 205 247 248 254 255 260 287 290
KEEPS (282) 17
NONINPS (283) 19
ABSTRACTS (284) 18
CONTINUOUS (285) 20
RATES (286) 26
PROPERTY (287) 21
INVARIANTS (288) 27
ENABLINGS (289) 28
ASSIGNS (290) 29
RATE_ASSIGNS (291) 30
DELAY_ASSIGNS (292) 31
PRIORITY_ASSIGNS (293) 32
BOOL_ASSIGNS (294) 34
INT_ASSIGNS (295)
BOOL_FALSE (296) 199
BOOL_TRUE (297) 200
ASSIGN (298) 239 240 307
VARIABLES (299) 12
INITRATES (300) 24
INITVALS (301) 25
INITINTS (302)
Pr (303) 75 76
Ss (304) 77 78
AU (305) 105
EU (306) 106
EG (307) 103
EF (308) 104
AG (309) 101
AF (310) 102
PG (311) 79
PF (312) 80
PU (313) 82
PX (314) 81
INTEGERS (315)
UNIFORM (316) 225 286 287
NORMAL (317) 226
EXPONENTIAL (318) 212 288
GAMMA (319) 227
LOGNORMAL (320) 228
CHISQ (321) 213
LAPLACE (322) 214
CAUCHY (323) 215
RAYLEIGH (324) 216
POISSON (325) 217
BINOMIAL (326) 229
BERNOULLI (327) 218
AND (328) 223
OR (329) 222
XOR (330) 224
IMPLIC (331) 177
TRANS_RATES (332) 33
FAILTRANS (333) 15
INT (334) 196
BIT (335) 182
RATE (336) 195
BOOL (337) 219
NONDISABLING (338) 16


Nonterminals, with rules where they appear

$accept (108)
    on left: 0
input (109)
    on left: 1 2, on right: 0 1
line (110)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 34 35 36 38, on right: 1 2
@1 (111)
    on left: 37, on right: 38
inputs (112)
    on left: 39 40, on right: 9 40
outputs (113)
    on left: 41 42, on right: 10 42
internals (114)
    on left: 43 44, on right: 11 44
variables (115)
    on left: 45 46, on right: 12 46
variable (116)
    on left: 47, on right: 135 136 137 138 139 140 141 142 143 144
    148 149 150 151 152 153 154 155 156 157
dummys (117)
    on left: 48 49 50 51, on right: 13 14 49 50 51
failtrans (118)
    on left: 52 53, on right: 15 53
nondisabling (119)
    on left: 54 55, on right: 16 55
keeps (120)
    on left: 56 57, on right: 17 57
abstracts (121)
    on left: 58 59, on right: 18 59
noninps (122)
    on left: 60 61, on right: 19 61
continuous (123)
    on left: 62 63 64 65 66 67 68 69 70 71, on right: 20 63 64 65 66
    67 68 69 70 71
property (124)
    on left: 72 73, on right: 21
probproperty (125)
    on left: 74 75 76 77 78, on right: 72 77 78 79 80 81 82
probprop (126)
    on left: 79 80 81 82, on right: 75 76
props (127)
    on left: 83 84 85 86, on right: 73
andprop (128)
    on left: 87 88, on right: 83 87
orprop (129)
    on left: 89 90, on right: 84 89
impliesprop (130)
    on left: 91 92, on right: 85 91
prop (131)
    on left: 93 94 95, on right: 83 84 85 86 87 88 89 90 91 92 93 97
    98 99
midprop (132)
    on left: 96, on right: 95
propinner (133)
    on left: 97 98 99 100, on right: 96
fronttype (134)
    on left: 101 102 103 104, on right: 93 94
midtype (135)
    on left: 105 106, on right: 97 98 99 100
bound (136)
    on left: 107 108 109, on right: 79 80 82 93 94 97 98 99 100
init_state (137)
    on left: 110 111 112, on right: 22
place (138)
    on left: 113, on right: 118 119 120 121 122 123 124 125 126 127
    128 129 130 131 161 162 166 239 240 266
marking (139)
    on left: 114, on right: 23 35
marking_set (140)
    on left: 115 116, on right: 114 115
mark (141)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128 129 130
    131, on right: 115 116
init_rates (142)
    on left: 132, on right: 24
init_rates_set (143)
    on left: 133 134, on right: 132 133
init_rate (144)
    on left: 135 136 137 138 139 140 141 142 143 144, on right: 133
init_vals (145)
    on left: 145, on right: 25
init_vals_set (146)
    on left: 146 147, on right: 145 146
init_val (147)
    on left: 148 149 150 151 152 153 154 155 156 157, on right: 146
rates (148)
    on left: 158, on right: 26
rate_set (149)
    on left: 159 160, on right: 158 159
trate (150)
    on left: 161 162, on right: 159
invariants (151)
    on left: 163, on right: 27
invariant_set (152)
    on left: 164 165, on right: 163 164
invariant (153)
    on left: 166, on right: 164
edges (154)
    on left: 167, on right: 6
edge (155)
    on left: 168 169 170 171, on right: 167 168
cons (156)
    on left: 172 173, on right: 170 171
expr (157)
    on left: 174 175, on right: 170
hsf (158)
    on left: 176 177 178, on right: 74 94 98 99 100 107 108 175 176
    177 194 196 235 236 239 240 241 288 292 296 300 307
andexpr (159)
    on left: 179 180, on right: 176 177 178 179
relation (160)
    on left: 181 182 183 184, on right: 179 180 181
arithexpr (161)
    on left: 185 186 187, on right: 182 183 184 185 186 201 202
multexpr (162)
    on left: 188 189 190 191 192 193, on right: 185 186 187 188 189
    190 191 192
term (163)
    on left: 194 195 196 197 198 199 200 201 202 203 204 205, on right:
    189 190 191 192 193 198
relop (164)
    on left: 206 207 208 209 210, on right: 75 77 107 183
unop (165)
    on left: 211 212 213 214 215 216 217 218 219 220 221, on right:
    201
binop (166)
    on left: 222 223 224 225 226 227 228 229 230 231 232, on right:
    202
ineqs (167)
    on left: 233 234, on right: 233 278
hsf_ineqs (168)
    on left: 235 236, on right: 166 235 274
rate_ineqs (169)
    on left: 237 238, on right: 237 282
ineq (170)
    on left: 239, on right: 233 234
rate_ineq (171)
    on left: 240, on right: 237 238
exprd (172)
    on left: 241, on right: 171
plow (173)
    on left: 242 243 244 245 246 247 248, on right: 170 171
pup (174)
    on left: 249 250 251 252 253 254 255, on right: 170 171
lower (175)
    on left: 256 257, on right: 170 171
upper (176)
    on left: 258 259 260, on right: 170 171
rate (177)
    on left: 261 262, on right: 170 171
weight (178)
    on left: 263 264, on right: 170 171
node (179)
    on left: 265 266, on right: 7 168 169 170 171 274 278 282 286 287
    288 289 290 291 292 296 300 304
signal_trans (180)
    on left: 267 268 269 270, on right: 117 118 119 265 312 313 318
    319
enables (181)
    on left: 271, on right: 28
enable_set (182)
    on left: 272 273, on right: 271 272
enable (183)
    on left: 274, on right: 272
assigns (184)
    on left: 275, on right: 29
assign_set (185)
    on left: 276 277, on right: 275 276
assign (186)
    on left: 278, on right: 276
rate_assigns (187)
    on left: 279, on right: 30
rate_assign_set (188)
    on left: 280 281, on right: 279 280
rate_assign (189)
    on left: 282, on right: 280
delay_assigns (190)
    on left: 283, on right: 31
delay_assign_set (191)
    on left: 284 285, on right: 283 284
delay_assign (192)
    on left: 286 287 288 289 290 291 292, on right: 284
priority_assigns (193)
    on left: 293, on right: 32
priority_assign_set (194)
    on left: 294 295, on right: 293 294
priority_assign (195)
    on left: 296, on right: 294
transition_rates (196)
    on left: 297, on right: 33
transition_rate_set (197)
    on left: 298 299, on right: 297 298
transition_rate (198)
    on left: 300, on right: 298
bool_assigns (199)
    on left: 301, on right: 34
bool_assign_set (200)
    on left: 302 303, on right: 301 302
bool_assign (201)
    on left: 304, on right: 302
bool_ineqs (202)
    on left: 305 306, on right: 304 305
bool_ineq (203)
    on left: 307, on right: 305 306
vevents (204)
    on left: 308 309, on right: 36 308
vevent (205)
    on left: 310 311 312 313, on right: 308 309
sevents (206)
    on left: 314 315, on right: 38 314
sevent (207)
    on left: 316 317 318 319, on right: 314 315


State 0

    0 $accept: . input $end

    ID        shift, and go to state 1
    INPUTS    shift, and go to state 2
    OUTPUTS   shift, and go to state 3
    INTERNAL  shift, and go to state 4
    GRAPH     shift, and go to state 5
    END       shift, and go to state 6
    MARKING   shift, and go to state 7
    NAME      shift, and go to state 8
    DUMMYS    shift, and go to state 9
    ATACS     shift, and go to state 10
    '\n'      shift, and go to state 11

    input         go to state 12
    line          go to state 13
    place         go to state 14
    edges         go to state 15
    edge          go to state 16
    node          go to state 17
    signal_trans  go to state 18


State 1

  113 place: ID .
  267 signal_trans: ID . '+'
  268             | ID . '+' '/' INTEGER
  269             | ID . '-'
  270             | ID . '-' '/' INTEGER

    '+'  shift, and go to state 19
    '-'  shift, and go to state 20

    $default  reduce using rule 113 (place)


State 2

    9 line: INPUTS . inputs '\n'

    $default  reduce using rule 39 (inputs)

    inputs  go to state 21


State 3

   10 line: OUTPUTS . outputs '\n'

    $default  reduce using rule 41 (outputs)

    outputs  go to state 22


State 4

   11 line: INTERNAL . internals '\n'

    $default  reduce using rule 43 (internals)

    internals  go to state 23


State 5

    5 line: GRAPH . '\n'

    '\n'  shift, and go to state 24


State 6

    4 line: END . '\n'

    '\n'  shift, and go to state 25


State 7

   35 line: MARKING . marking '\n'

    '{'  shift, and go to state 26

    marking  go to state 27


State 8

    8 line: NAME . ID '\n'

    ID  shift, and go to state 28


State 9

   13 line: DUMMYS . dummys '\n'

    $default  reduce using rule 48 (dummys)

    dummys  go to state 29


State 10

   12 line: ATACS . VARIABLES variables '\n'
   14     | ATACS . DUMMYS dummys '\n'
   15     | ATACS . FAILTRANS failtrans '\n'
   16     | ATACS . NONDISABLING nondisabling '\n'
   17     | ATACS . KEEPS keeps '\n'
   18     | ATACS . ABSTRACTS abstracts '\n'
   19     | ATACS . NONINPS noninps '\n'
   20     | ATACS . CONTINUOUS continuous '\n'
   21     | ATACS . PROPERTY property '\n'
   22     | ATACS . INIT_STATE init_state '\n'
   23     | ATACS . MARKING marking '\n'
   24     | ATACS . INITRATES init_rates '\n'
   25     | ATACS . INITVALS init_vals '\n'
   26     | ATACS . RATES rates '\n'
   27     | ATACS . INVARIANTS invariants '\n'
   28     | ATACS . ENABLINGS enables '\n'
   29     | ATACS . ASSIGNS assigns '\n'
   30     | ATACS . RATE_ASSIGNS rate_assigns '\n'
   31     | ATACS . DELAY_ASSIGNS delay_assigns '\n'
   32     | ATACS . PRIORITY_ASSIGNS priority_assigns '\n'
   33     | ATACS . TRANS_RATES transition_rates '\n'
   34     | ATACS . BOOL_ASSIGNS bool_assigns '\n'
   36     | ATACS . VERIFY '{' vevents '}' '\n'
   38     | ATACS . SEARCH @1 '{' sevents '}' '\n'

    MARKING           shift, and go to state 30
    INIT_STATE        shift, and go to state 31
    DUMMYS            shift, and go to state 32
    VERIFY            shift, and go to state 33
    SEARCH            shift, and go to state 34
    KEEPS             shift, and go to state 35
    NONINPS           shift, and go to state 36
    ABSTRACTS         shift, and go to state 37
    CONTINUOUS        shift, and go to state 38
    RATES             shift, and go to state 39
    PROPERTY          shift, and go to state 40
    INVARIANTS        shift, and go to state 41
    ENABLINGS         shift, and go to state 42
    ASSIGNS           shift, and go to state 43
    RATE_ASSIGNS      shift, and go to state 44
    DELAY_ASSIGNS     shift, and go to state 45
    PRIORITY_ASSIGNS  shift, and go to state 46
    BOOL_ASSIGNS      shift, and go to state 47
    VARIABLES         shift, and go to state 48
    INITRATES         shift, and go to state 49
    INITVALS          shift, and go to state 50
    TRANS_RATES       shift, and go to state 51
    FAILTRANS         shift, and go to state 52
    NONDISABLING      shift, and go to state 53


State 11

    3 line: '\n' .

    $default  reduce using rule 3 (line)


State 12

    0 $accept: input . $end
    1 input: input . line

    $end      shift, and go to state 54
    ID        shift, and go to state 1
    INPUTS    shift, and go to state 2
    OUTPUTS   shift, and go to state 3
    INTERNAL  shift, and go to state 4
    GRAPH     shift, and go to state 5
    END       shift, and go to state 6
    MARKING   shift, and go to state 7
    NAME      shift, and go to state 8
    DUMMYS    shift, and go to state 9
    ATACS     shift, and go to state 10
    '\n'      shift, and go to state 11

    line          go to state 55
    place         go to state 14
    edges         go to state 15
    edge          go to state 16
    node          go to state 17
    signal_trans  go to state 18


State 13

    2 input: line .

    $default  reduce using rule 2 (input)


State 14

  266 node: place .

    $default  reduce using rule 266 (node)


State 15

    6 line: edges . '\n'

    '\n'  shift, and go to state 56


State 16

  167 edges: edge .
  168 edge: edge . node

    ID  shift, and go to state 1

    $default  reduce using rule 167 (edges)

    place         go to state 14
    node          go to state 57
    signal_trans  go to state 18


State 17

    7 line: node . '\n'
  169 edge: node . node
  170     | node . node ATACS cons expr plow pup lower upper rate weight
  171     | node . node ATACS cons exprd plow pup lower upper rate weight

    ID    shift, and go to state 1
    '\n'  shift, and go to state 58

    place         go to state 14
    node          go to state 59
    signal_trans  go to state 18


State 18

  265 node: signal_trans .

    $default  reduce using rule 265 (node)


State 19

  267 signal_trans: ID '+' .
  268             | ID '+' . '/' INTEGER

    '/'  shift, and go to state 60

    $default  reduce using rule 267 (signal_trans)


State 20

  269 signal_trans: ID '-' .
  270             | ID '-' . '/' INTEGER

    '/'  shift, and go to state 61

    $default  reduce using rule 269 (signal_trans)


State 21

    9 line: INPUTS inputs . '\n'
   40 inputs: inputs . ID

    ID    shift, and go to state 62
    '\n'  shift, and go to state 63


State 22

   10 line: OUTPUTS outputs . '\n'
   42 outputs: outputs . ID

    ID    shift, and go to state 64
    '\n'  shift, and go to state 65


State 23

   11 line: INTERNAL internals . '\n'
   44 internals: internals . ID

    ID    shift, and go to state 66
    '\n'  shift, and go to state 67


State 24

    5 line: GRAPH '\n' .

    $default  reduce using rule 5 (line)


State 25

    4 line: END '\n' .

    $default  reduce using rule 4 (line)


State 26

  114 marking: '{' . marking_set '}'

    ID   shift, and go to state 68
    '<'  shift, and go to state 69

    place        go to state 70
    marking_set  go to state 71
    mark         go to state 72


State 27

   35 line: MARKING marking . '\n'

    '\n'  shift, and go to state 73


State 28

    8 line: NAME ID . '\n'

    '\n'  shift, and go to state 74


State 29

   13 line: DUMMYS dummys . '\n'
   49 dummys: dummys . ID
   50       | dummys . ID '+'
   51       | dummys . ID '-'

    ID    shift, and go to state 75
    '\n'  shift, and go to state 76


State 30

   23 line: ATACS MARKING . marking '\n'

    '{'  shift, and go to state 26

    marking  go to state 77


State 31

   22 line: ATACS INIT_STATE . init_state '\n'

    '['  shift, and go to state 78

    init_state  go to state 79


State 32

   14 line: ATACS DUMMYS . dummys '\n'

    $default  reduce using rule 48 (dummys)

    dummys  go to state 80


State 33

   36 line: ATACS VERIFY . '{' vevents '}' '\n'

    '{'  shift, and go to state 81


State 34

   38 line: ATACS SEARCH . @1 '{' sevents '}' '\n'

    $default  reduce using rule 37 (@1)

    @1  go to state 82


State 35

   17 line: ATACS KEEPS . keeps '\n'

    $default  reduce using rule 56 (keeps)

    keeps  go to state 83


State 36

   19 line: ATACS NONINPS . noninps '\n'

    $default  reduce using rule 60 (noninps)

    noninps  go to state 84


State 37

   18 line: ATACS ABSTRACTS . abstracts '\n'

    $default  reduce using rule 58 (abstracts)

    abstracts  go to state 85


State 38

   20 line: ATACS CONTINUOUS . continuous '\n'

    $default  reduce using rule 62 (continuous)

    continuous  go to state 86


State 39

   26 line: ATACS RATES . rates '\n'

    '{'  shift, and go to state 87

    rates  go to state 88


State 40

   21 line: ATACS PROPERTY . property '\n'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    Pr           shift, and go to state 101
    Ss           shift, and go to state 102
    EG           shift, and go to state 103
    EF           shift, and go to state 104
    AG           shift, and go to state 105
    AF           shift, and go to state 106
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '{'          shift, and go to state 126
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    property      go to state 130
    probproperty  go to state 131
    props         go to state 132
    prop          go to state 133
    midprop       go to state 134
    fronttype     go to state 135
    hsf           go to state 136
    andexpr       go to state 137
    relation      go to state 138
    arithexpr     go to state 139
    multexpr      go to state 140
    term          go to state 141
    unop          go to state 142
    binop         go to state 143


State 41

   27 line: ATACS INVARIANTS . invariants '\n'

    '{'  shift, and go to state 144

    invariants  go to state 145


State 42

   28 line: ATACS ENABLINGS . enables '\n'

    '{'  shift, and go to state 146

    enables  go to state 147


State 43

   29 line: ATACS ASSIGNS . assigns '\n'

    '{'  shift, and go to state 148

    assigns  go to state 149


State 44

   30 line: ATACS RATE_ASSIGNS . rate_assigns '\n'

    '{'  shift, and go to state 150

    rate_assigns  go to state 151


State 45

   31 line: ATACS DELAY_ASSIGNS . delay_assigns '\n'

    '{'  shift, and go to state 152

    delay_assigns  go to state 153


State 46

   32 line: ATACS PRIORITY_ASSIGNS . priority_assigns '\n'

    '{'  shift, and go to state 154

    priority_assigns  go to state 155


State 47

   34 line: ATACS BOOL_ASSIGNS . bool_assigns '\n'

    '{'  shift, and go to state 156

    bool_assigns  go to state 157


State 48

   12 line: ATACS VARIABLES . variables '\n'

    $default  reduce using rule 45 (variables)

    variables  go to state 158


State 49

   24 line: ATACS INITRATES . init_rates '\n'

    '{'  shift, and go to state 159

    init_rates  go to state 160


State 50

   25 line: ATACS INITVALS . init_vals '\n'

    '{'  shift, and go to state 161

    init_vals  go to state 162


State 51

   33 line: ATACS TRANS_RATES . transition_rates '\n'

    '{'  shift, and go to state 163

    transition_rates  go to state 164


State 52

   15 line: ATACS FAILTRANS . failtrans '\n'

    $default  reduce using rule 52 (failtrans)

    failtrans  go to state 165


State 53

   16 line: ATACS NONDISABLING . nondisabling '\n'

    $default  reduce using rule 54 (nondisabling)

    nondisabling  go to state 166


State 54

    0 $accept: input $end .

    $default  accept


State 55

    1 input: input line .

    $default  reduce using rule 1 (input)


State 56

    6 line: edges '\n' .

    $default  reduce using rule 6 (line)


State 57

  168 edge: edge node .

    $default  reduce using rule 168 (edge)


State 58

    7 line: node '\n' .

    $default  reduce using rule 7 (line)


State 59

  169 edge: node node .
  170     | node node . ATACS cons expr plow pup lower upper rate weight
  171     | node node . ATACS cons exprd plow pup lower upper rate weight

    ATACS  shift, and go to state 167

    $default  reduce using rule 169 (edge)


State 60

  268 signal_trans: ID '+' '/' . INTEGER

    INTEGER  shift, and go to state 168


State 61

  270 signal_trans: ID '-' '/' . INTEGER

    INTEGER  shift, and go to state 169


State 62

   40 inputs: inputs ID .

    $default  reduce using rule 40 (inputs)


State 63

    9 line: INPUTS inputs '\n' .

    $default  reduce using rule 9 (line)


State 64

   42 outputs: outputs ID .

    $default  reduce using rule 42 (outputs)


State 65

   10 line: OUTPUTS outputs '\n' .

    $default  reduce using rule 10 (line)


State 66

   44 internals: internals ID .

    $default  reduce using rule 44 (internals)


State 67

   11 line: INTERNAL internals '\n' .

    $default  reduce using rule 11 (line)


State 68

  113 place: ID .

    $default  reduce using rule 113 (place)


State 69

  117 mark: '<' . signal_trans ',' signal_trans '>'
  118     | '<' . place ',' signal_trans '>'
  119     | '<' . signal_trans ',' place '>'
  120     | '<' . place ',' place '>'
  122     | '<' . place '=' INTEGER '>'
  123     | '<' . place '=' '-' INTEGER '>'
  124     | '<' . place '=' '[' '-' INF ',' '-' INTEGER ']' '>'
  125     | '<' . place '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  126     | '<' . place '=' '[' '-' INF ',' INTEGER ']' '>'
  127     | '<' . place '=' '[' '-' INTEGER ',' INTEGER ']' '>'
  128     | '<' . place '=' '[' INTEGER ',' INTEGER ']' '>'
  129     | '<' . place '=' '[' '-' INF ',' INF ']' '>'
  130     | '<' . place '=' '[' '-' INTEGER ',' INF ']' '>'
  131     | '<' . place '=' '[' INTEGER ',' INF ']' '>'

    ID  shift, and go to state 1

    place         go to state 170
    signal_trans  go to state 171


State 70

  121 mark: place .

    $default  reduce using rule 121 (mark)


State 71

  114 marking: '{' marking_set . '}'
  115 marking_set: marking_set . mark

    ID   shift, and go to state 68
    '}'  shift, and go to state 172
    '<'  shift, and go to state 69

    place  go to state 70
    mark   go to state 173


State 72

  116 marking_set: mark .

    $default  reduce using rule 116 (marking_set)


State 73

   35 line: MARKING marking '\n' .

    $default  reduce using rule 35 (line)


State 74

    8 line: NAME ID '\n' .

    $default  reduce using rule 8 (line)


State 75

   49 dummys: dummys ID .
   50       | dummys ID . '+'
   51       | dummys ID . '-'

    '+'  shift, and go to state 174
    '-'  shift, and go to state 175

    $default  reduce using rule 49 (dummys)


State 76

   13 line: DUMMYS dummys '\n' .

    $default  reduce using rule 13 (line)


State 77

   23 line: ATACS MARKING marking . '\n'

    '\n'  shift, and go to state 176


State 78

  110 init_state: '[' . INTEGER ']'
  111           | '[' . ID ']'
  112           | '[' . ']'

    ID       shift, and go to state 177
    INTEGER  shift, and go to state 178
    ']'      shift, and go to state 179


State 79

   22 line: ATACS INIT_STATE init_state . '\n'

    '\n'  shift, and go to state 180


State 80

   14 line: ATACS DUMMYS dummys . '\n'
   49 dummys: dummys . ID
   50       | dummys . ID '+'
   51       | dummys . ID '-'

    ID    shift, and go to state 75
    '\n'  shift, and go to state 181


State 81

   36 line: ATACS VERIFY '{' . vevents '}' '\n'

    ID   shift, and go to state 182
    NOT  shift, and go to state 183

    signal_trans  go to state 184
    vevents       go to state 185
    vevent        go to state 186


State 82

   38 line: ATACS SEARCH @1 . '{' sevents '}' '\n'

    '{'  shift, and go to state 187


State 83

   17 line: ATACS KEEPS keeps . '\n'
   57 keeps: keeps . ID

    ID    shift, and go to state 188
    '\n'  shift, and go to state 189


State 84

   19 line: ATACS NONINPS noninps . '\n'
   61 noninps: noninps . ID

    ID    shift, and go to state 190
    '\n'  shift, and go to state 191


State 85

   18 line: ATACS ABSTRACTS abstracts . '\n'
   59 abstracts: abstracts . ID

    ID    shift, and go to state 192
    '\n'  shift, and go to state 193


State 86

   20 line: ATACS CONTINUOUS continuous . '\n'
   63 continuous: continuous . ID
   64           | continuous . ID '[' '-' INF ',' '-' INTEGER ']'
   65           | continuous . ID '[' '-' INTEGER ',' '-' INTEGER ']'
   66           | continuous . ID '[' '-' INF ',' INTEGER ']'
   67           | continuous . ID '[' '-' INTEGER ',' INTEGER ']'
   68           | continuous . ID '[' INTEGER ',' INTEGER ']'
   69           | continuous . ID '[' '-' INF ',' INF ']'
   70           | continuous . ID '[' '-' INTEGER ',' INF ']'
   71           | continuous . ID '[' INTEGER ',' INF ']'

    ID    shift, and go to state 194
    '\n'  shift, and go to state 195


State 87

  158 rates: '{' . rate_set '}'

    $default  reduce using rule 160 (rate_set)

    rate_set  go to state 196


State 88

   26 line: ATACS RATES rates . '\n'

    '\n'  shift, and go to state 197


State 89

  232 binop: IDIV .

    $default  reduce using rule 232 (binop)


State 90

  230 binop: MINF .

    $default  reduce using rule 230 (binop)


State 91

  231 binop: MAXF .

    $default  reduce using rule 231 (binop)


State 92

  220 unop: FLOOR .

    $default  reduce using rule 220 (unop)


State 93

  221 unop: CEIL .

    $default  reduce using rule 221 (unop)


State 94

  197 term: ID .

    $default  reduce using rule 197 (term)


State 95

  203 term: INTEGER .

    $default  reduce using rule 203 (term)


State 96

  211 unop: NOT .

    $default  reduce using rule 211 (unop)


State 97

  204 term: REAL .

    $default  reduce using rule 204 (term)


State 98

  205 term: INF .

    $default  reduce using rule 205 (term)


State 99

  199 term: BOOL_FALSE .

    $default  reduce using rule 199 (term)


State 100

  200 term: BOOL_TRUE .

    $default  reduce using rule 200 (term)


State 101

   75 probproperty: Pr . relop REAL '{' probprop '}'
   76             | Pr . '=' '?' '{' probprop '}'

    '='  shift, and go to state 198
    '>'  shift, and go to state 199
    '<'  shift, and go to state 200

    relop  go to state 201


State 102

   77 probproperty: Ss . relop REAL '{' probproperty '}'
   78             | Ss . '=' '?' '{' probproperty '}'

    '='  shift, and go to state 202
    '>'  shift, and go to state 199
    '<'  shift, and go to state 200

    relop  go to state 203


State 103

  103 fronttype: EG .

    $default  reduce using rule 103 (fronttype)


State 104

  104 fronttype: EF .

    $default  reduce using rule 104 (fronttype)


State 105

  101 fronttype: AG .

    $default  reduce using rule 101 (fronttype)


State 106

  102 fronttype: AF .

    $default  reduce using rule 102 (fronttype)


State 107

  225 binop: UNIFORM .

    $default  reduce using rule 225 (binop)


State 108

  226 binop: NORMAL .

    $default  reduce using rule 226 (binop)


State 109

  212 unop: EXPONENTIAL .

    $default  reduce using rule 212 (unop)


State 110

  227 binop: GAMMA .

    $default  reduce using rule 227 (binop)


State 111

  228 binop: LOGNORMAL .

    $default  reduce using rule 228 (binop)


State 112

  213 unop: CHISQ .

    $default  reduce using rule 213 (unop)


State 113

  214 unop: LAPLACE .

    $default  reduce using rule 214 (unop)


State 114

  215 unop: CAUCHY .

    $default  reduce using rule 215 (unop)


State 115

  216 unop: RAYLEIGH .

    $default  reduce using rule 216 (unop)


State 116

  217 unop: POISSON .

    $default  reduce using rule 217 (unop)


State 117

  229 binop: BINOMIAL .

    $default  reduce using rule 229 (binop)


State 118

  218 unop: BERNOULLI .

    $default  reduce using rule 218 (unop)


State 119

  223 binop: AND .

    $default  reduce using rule 223 (binop)


State 120

  222 binop: OR .

    $default  reduce using rule 222 (binop)


State 121

  224 binop: XOR .

    $default  reduce using rule 224 (binop)


State 122

  196 term: INT . '(' hsf ')'

    '('  shift, and go to state 204


State 123

  182 relation: BIT . '(' arithexpr ',' arithexpr ')'

    '('  shift, and go to state 205


State 124

  195 term: RATE . '(' ID ')'

    '('  shift, and go to state 206


State 125

  219 unop: BOOL .

    $default  reduce using rule 219 (unop)


State 126

   96 midprop: '{' . propinner '}'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    EG           shift, and go to state 103
    EF           shift, and go to state 104
    AG           shift, and go to state 105
    AF           shift, and go to state 106
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '{'          shift, and go to state 126
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    prop       go to state 207
    midprop    go to state 134
    propinner  go to state 208
    fronttype  go to state 135
    hsf        go to state 209
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 127

  198 term: '-' . term

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    term   go to state 210
    unop   go to state 142
    binop  go to state 143


State 128

  194 term: '(' . hsf ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 211
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 129

  181 relation: '~' . relation

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    relation   go to state 212
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 130

   21 line: ATACS PROPERTY property . '\n'

    '\n'  shift, and go to state 213


State 131

   72 property: probproperty .

    $default  reduce using rule 72 (property)


State 132

   73 property: props .

    $default  reduce using rule 73 (property)


State 133

   83 props: prop . andprop
   84      | prop . orprop
   85      | prop . impliesprop
   86      | prop .

    '-'  shift, and go to state 214
    '&'  shift, and go to state 215
    '|'  shift, and go to state 216

    $default  reduce using rule 86 (props)

    andprop      go to state 217
    orprop       go to state 218
    impliesprop  go to state 219


State 134

   95 prop: midprop .

    $default  reduce using rule 95 (prop)


State 135

   93 prop: fronttype . bound '(' prop ')'
   94     | fronttype . bound '(' hsf ')'

    '['  shift, and go to state 220

    $default  reduce using rule 109 (bound)

    bound  go to state 221


State 136

   74 probproperty: hsf .
  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr

    IMPLIC  shift, and go to state 222
    '|'     shift, and go to state 223

    $default  reduce using rule 74 (probproperty)


State 137

  178 hsf: andexpr .
  179 andexpr: andexpr . '&' relation

    '&'  shift, and go to state 224

    $default  reduce using rule 178 (hsf)


State 138

  180 andexpr: relation .

    $default  reduce using rule 180 (andexpr)


State 139

  183 relation: arithexpr . relop arithexpr
  184         | arithexpr .
  185 arithexpr: arithexpr . '+' multexpr
  186          | arithexpr . '-' multexpr

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226
    '='  shift, and go to state 227
    '>'  shift, and go to state 199
    '<'  shift, and go to state 200

    $default  reduce using rule 184 (relation)

    relop  go to state 228


State 140

  187 arithexpr: multexpr .
  188 multexpr: multexpr . ID
  189         | multexpr . '*' term
  190         | multexpr . '/' term
  191         | multexpr . '%' term
  192         | multexpr . '^' term

    ID   shift, and go to state 229
    '*'  shift, and go to state 230
    '/'  shift, and go to state 231
    '%'  shift, and go to state 232
    '^'  shift, and go to state 233

    $default  reduce using rule 187 (arithexpr)


State 141

  193 multexpr: term .

    $default  reduce using rule 193 (multexpr)


State 142

  201 term: unop . '(' arithexpr ')'

    '('  shift, and go to state 234


State 143

  202 term: binop . '(' arithexpr ',' arithexpr ')'

    '('  shift, and go to state 235


State 144

  163 invariants: '{' . invariant_set '}'

    $default  reduce using rule 165 (invariant_set)

    invariant_set  go to state 236


State 145

   27 line: ATACS INVARIANTS invariants . '\n'

    '\n'  shift, and go to state 237


State 146

  271 enables: '{' . enable_set '}'

    $default  reduce using rule 273 (enable_set)

    enable_set  go to state 238


State 147

   28 line: ATACS ENABLINGS enables . '\n'

    '\n'  shift, and go to state 239


State 148

  275 assigns: '{' . assign_set '}'

    $default  reduce using rule 277 (assign_set)

    assign_set  go to state 240


State 149

   29 line: ATACS ASSIGNS assigns . '\n'

    '\n'  shift, and go to state 241


State 150

  279 rate_assigns: '{' . rate_assign_set '}'

    $default  reduce using rule 281 (rate_assign_set)

    rate_assign_set  go to state 242


State 151

   30 line: ATACS RATE_ASSIGNS rate_assigns . '\n'

    '\n'  shift, and go to state 243


State 152

  283 delay_assigns: '{' . delay_assign_set '}'

    $default  reduce using rule 285 (delay_assign_set)

    delay_assign_set  go to state 244


State 153

   31 line: ATACS DELAY_ASSIGNS delay_assigns . '\n'

    '\n'  shift, and go to state 245


State 154

  293 priority_assigns: '{' . priority_assign_set '}'

    $default  reduce using rule 295 (priority_assign_set)

    priority_assign_set  go to state 246


State 155

   32 line: ATACS PRIORITY_ASSIGNS priority_assigns . '\n'

    '\n'  shift, and go to state 247


State 156

  301 bool_assigns: '{' . bool_assign_set '}'

    $default  reduce using rule 303 (bool_assign_set)

    bool_assign_set  go to state 248


State 157

   34 line: ATACS BOOL_ASSIGNS bool_assigns . '\n'

    '\n'  shift, and go to state 249


State 158

   12 line: ATACS VARIABLES variables . '\n'
   46 variables: variables . ID

    ID    shift, and go to state 250
    '\n'  shift, and go to state 251


State 159

  132 init_rates: '{' . init_rates_set '}'

    $default  reduce using rule 134 (init_rates_set)

    init_rates_set  go to state 252


State 160

   24 line: ATACS INITRATES init_rates . '\n'

    '\n'  shift, and go to state 253


State 161

  145 init_vals: '{' . init_vals_set '}'

    $default  reduce using rule 147 (init_vals_set)

    init_vals_set  go to state 254


State 162

   25 line: ATACS INITVALS init_vals . '\n'

    '\n'  shift, and go to state 255


State 163

  297 transition_rates: '{' . transition_rate_set '}'

    $default  reduce using rule 299 (transition_rate_set)

    transition_rate_set  go to state 256


State 164

   33 line: ATACS TRANS_RATES transition_rates . '\n'

    '\n'  shift, and go to state 257


State 165

   15 line: ATACS FAILTRANS failtrans . '\n'
   53 failtrans: failtrans . ID

    ID    shift, and go to state 258
    '\n'  shift, and go to state 259


State 166

   16 line: ATACS NONDISABLING nondisabling . '\n'
   55 nondisabling: nondisabling . ID

    ID    shift, and go to state 260
    '\n'  shift, and go to state 261


State 167

  170 edge: node node ATACS . cons expr plow pup lower upper rate weight
  171     | node node ATACS . cons exprd plow pup lower upper rate weight

    '{'  shift, and go to state 262

    $default  reduce using rule 172 (cons)

    cons  go to state 263


State 168

  268 signal_trans: ID '+' '/' INTEGER .

    $default  reduce using rule 268 (signal_trans)


State 169

  270 signal_trans: ID '-' '/' INTEGER .

    $default  reduce using rule 270 (signal_trans)


State 170

  118 mark: '<' place . ',' signal_trans '>'
  120     | '<' place . ',' place '>'
  122     | '<' place . '=' INTEGER '>'
  123     | '<' place . '=' '-' INTEGER '>'
  124     | '<' place . '=' '[' '-' INF ',' '-' INTEGER ']' '>'
  125     | '<' place . '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  126     | '<' place . '=' '[' '-' INF ',' INTEGER ']' '>'
  127     | '<' place . '=' '[' '-' INTEGER ',' INTEGER ']' '>'
  128     | '<' place . '=' '[' INTEGER ',' INTEGER ']' '>'
  129     | '<' place . '=' '[' '-' INF ',' INF ']' '>'
  130     | '<' place . '=' '[' '-' INTEGER ',' INF ']' '>'
  131     | '<' place . '=' '[' INTEGER ',' INF ']' '>'

    ','  shift, and go to state 264
    '='  shift, and go to state 265


State 171

  117 mark: '<' signal_trans . ',' signal_trans '>'
  119     | '<' signal_trans . ',' place '>'

    ','  shift, and go to state 266


State 172

  114 marking: '{' marking_set '}' .

    $default  reduce using rule 114 (marking)


State 173

  115 marking_set: marking_set mark .

    $default  reduce using rule 115 (marking_set)


State 174

   50 dummys: dummys ID '+' .

    $default  reduce using rule 50 (dummys)


State 175

   51 dummys: dummys ID '-' .

    $default  reduce using rule 51 (dummys)


State 176

   23 line: ATACS MARKING marking '\n' .

    $default  reduce using rule 23 (line)


State 177

  111 init_state: '[' ID . ']'

    ']'  shift, and go to state 267


State 178

  110 init_state: '[' INTEGER . ']'

    ']'  shift, and go to state 268


State 179

  112 init_state: '[' ']' .

    $default  reduce using rule 112 (init_state)


State 180

   22 line: ATACS INIT_STATE init_state '\n' .

    $default  reduce using rule 22 (line)


State 181

   14 line: ATACS DUMMYS dummys '\n' .

    $default  reduce using rule 14 (line)


State 182

  267 signal_trans: ID . '+'
  268             | ID . '+' '/' INTEGER
  269             | ID . '-'
  270             | ID . '-' '/' INTEGER
  310 vevent: ID .

    '+'  shift, and go to state 19
    '-'  shift, and go to state 20

    $default  reduce using rule 310 (vevent)


State 183

  311 vevent: NOT . ID
  313       | NOT . signal_trans

    ID  shift, and go to state 269

    signal_trans  go to state 270


State 184

  312 vevent: signal_trans .

    $default  reduce using rule 312 (vevent)


State 185

   36 line: ATACS VERIFY '{' vevents . '}' '\n'
  308 vevents: vevents . ',' vevent

    '}'  shift, and go to state 271
    ','  shift, and go to state 272


State 186

  309 vevents: vevent .

    $default  reduce using rule 309 (vevents)


State 187

   38 line: ATACS SEARCH @1 '{' . sevents '}' '\n'

    ID   shift, and go to state 273
    NOT  shift, and go to state 274

    signal_trans  go to state 275
    sevents       go to state 276
    sevent        go to state 277


State 188

   57 keeps: keeps ID .

    $default  reduce using rule 57 (keeps)


State 189

   17 line: ATACS KEEPS keeps '\n' .

    $default  reduce using rule 17 (line)


State 190

   61 noninps: noninps ID .

    $default  reduce using rule 61 (noninps)


State 191

   19 line: ATACS NONINPS noninps '\n' .

    $default  reduce using rule 19 (line)


State 192

   59 abstracts: abstracts ID .

    $default  reduce using rule 59 (abstracts)


State 193

   18 line: ATACS ABSTRACTS abstracts '\n' .

    $default  reduce using rule 18 (line)


State 194

   63 continuous: continuous ID .
   64           | continuous ID . '[' '-' INF ',' '-' INTEGER ']'
   65           | continuous ID . '[' '-' INTEGER ',' '-' INTEGER ']'
   66           | continuous ID . '[' '-' INF ',' INTEGER ']'
   67           | continuous ID . '[' '-' INTEGER ',' INTEGER ']'
   68           | continuous ID . '[' INTEGER ',' INTEGER ']'
   69           | continuous ID . '[' '-' INF ',' INF ']'
   70           | continuous ID . '[' '-' INTEGER ',' INF ']'
   71           | continuous ID . '[' INTEGER ',' INF ']'

    '['  shift, and go to state 278

    $default  reduce using rule 63 (continuous)


State 195

   20 line: ATACS CONTINUOUS continuous '\n' .

    $default  reduce using rule 20 (line)


State 196

  158 rates: '{' rate_set . '}'
  159 rate_set: rate_set . trate

    '}'  shift, and go to state 279
    '<'  shift, and go to state 280

    trate  go to state 281


State 197

   26 line: ATACS RATES rates '\n' .

    $default  reduce using rule 26 (line)


State 198

   76 probproperty: Pr '=' . '?' '{' probprop '}'
  206 relop: '=' .

    '?'  shift, and go to state 282

    $default  reduce using rule 206 (relop)


State 199

  209 relop: '>' .
  210      | '>' . '='

    '='  shift, and go to state 283

    $default  reduce using rule 209 (relop)


State 200

  207 relop: '<' .
  208      | '<' . '='

    '='  shift, and go to state 284

    $default  reduce using rule 207 (relop)


State 201

   75 probproperty: Pr relop . REAL '{' probprop '}'

    REAL  shift, and go to state 285


State 202

   78 probproperty: Ss '=' . '?' '{' probproperty '}'
  206 relop: '=' .

    '?'  shift, and go to state 286

    $default  reduce using rule 206 (relop)


State 203

   77 probproperty: Ss relop . REAL '{' probproperty '}'

    REAL  shift, and go to state 287


State 204

  196 term: INT '(' . hsf ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 288
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 205

  182 relation: BIT '(' . arithexpr ',' arithexpr ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    arithexpr  go to state 289
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 206

  195 term: RATE '(' . ID ')'

    ID  shift, and go to state 290


State 207

   97 propinner: prop . midtype bound prop
   98          | prop . midtype bound hsf

    AU  shift, and go to state 291
    EU  shift, and go to state 292

    midtype  go to state 293


State 208

   96 midprop: '{' propinner . '}'

    '}'  shift, and go to state 294


State 209

   99 propinner: hsf . midtype bound prop
  100          | hsf . midtype bound hsf
  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr

    AU      shift, and go to state 291
    EU      shift, and go to state 292
    IMPLIC  shift, and go to state 222
    '|'     shift, and go to state 223

    midtype  go to state 295


State 210

  198 term: '-' term .

    $default  reduce using rule 198 (term)


State 211

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  194 term: '(' hsf . ')'

    IMPLIC  shift, and go to state 222
    ')'     shift, and go to state 296
    '|'     shift, and go to state 223


State 212

  181 relation: '~' relation .

    $default  reduce using rule 181 (relation)


State 213

   21 line: ATACS PROPERTY property '\n' .

    $default  reduce using rule 21 (line)


State 214

   92 impliesprop: '-' . '>' prop

    '>'  shift, and go to state 297


State 215

   88 andprop: '&' . prop

    EG   shift, and go to state 103
    EF   shift, and go to state 104
    AG   shift, and go to state 105
    AF   shift, and go to state 106
    '{'  shift, and go to state 126

    prop       go to state 298
    midprop    go to state 134
    fronttype  go to state 135


State 216

   90 orprop: '|' . prop

    EG   shift, and go to state 103
    EF   shift, and go to state 104
    AG   shift, and go to state 105
    AF   shift, and go to state 106
    '{'  shift, and go to state 126

    prop       go to state 299
    midprop    go to state 134
    fronttype  go to state 135


State 217

   83 props: prop andprop .
   87 andprop: andprop . '&' prop

    '&'  shift, and go to state 300

    $default  reduce using rule 83 (props)


State 218

   84 props: prop orprop .
   89 orprop: orprop . '|' prop

    '|'  shift, and go to state 301

    $default  reduce using rule 84 (props)


State 219

   85 props: prop impliesprop .
   91 impliesprop: impliesprop . '-' '>' prop

    '-'  shift, and go to state 302

    $default  reduce using rule 85 (props)


State 220

  107 bound: '[' . relop hsf ']'
  108      | '[' . hsf ',' hsf ']'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '='          shift, and go to state 227
    '('          shift, and go to state 128
    '>'          shift, and go to state 199
    '<'          shift, and go to state 200
    '~'          shift, and go to state 129

    hsf        go to state 303
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    relop      go to state 304
    unop       go to state 142
    binop      go to state 143


State 221

   93 prop: fronttype bound . '(' prop ')'
   94     | fronttype bound . '(' hsf ')'

    '('  shift, and go to state 305


State 222

  177 hsf: hsf IMPLIC . andexpr

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    andexpr    go to state 306
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 223

  176 hsf: hsf '|' . andexpr

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    andexpr    go to state 307
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 224

  179 andexpr: andexpr '&' . relation

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    relation   go to state 308
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 225

  185 arithexpr: arithexpr '+' . multexpr

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    multexpr  go to state 309
    term      go to state 141
    unop      go to state 142
    binop     go to state 143


State 226

  186 arithexpr: arithexpr '-' . multexpr

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    multexpr  go to state 310
    term      go to state 141
    unop      go to state 142
    binop     go to state 143


State 227

  206 relop: '=' .

    $default  reduce using rule 206 (relop)


State 228

  183 relation: arithexpr relop . arithexpr

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    arithexpr  go to state 311
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 229

  188 multexpr: multexpr ID .

    $default  reduce using rule 188 (multexpr)


State 230

  189 multexpr: multexpr '*' . term

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    term   go to state 312
    unop   go to state 142
    binop  go to state 143


State 231

  190 multexpr: multexpr '/' . term

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    term   go to state 313
    unop   go to state 142
    binop  go to state 143


State 232

  191 multexpr: multexpr '%' . term

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    term   go to state 314
    unop   go to state 142
    binop  go to state 143


State 233

  192 multexpr: multexpr '^' . term

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    term   go to state 315
    unop   go to state 142
    binop  go to state 143


State 234

  201 term: unop '(' . arithexpr ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    arithexpr  go to state 316
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 235

  202 term: binop '(' . arithexpr ',' arithexpr ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    arithexpr  go to state 317
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 236

  163 invariants: '{' invariant_set . '}'
  164 invariant_set: invariant_set . invariant

    '}'  shift, and go to state 318
    '<'  shift, and go to state 319

    invariant  go to state 320


State 237

   27 line: ATACS INVARIANTS invariants '\n' .

    $default  reduce using rule 27 (line)


State 238

  271 enables: '{' enable_set . '}'
  272 enable_set: enable_set . enable

    '}'  shift, and go to state 321
    '<'  shift, and go to state 322

    enable  go to state 323


State 239

   28 line: ATACS ENABLINGS enables '\n' .

    $default  reduce using rule 28 (line)


State 240

  275 assigns: '{' assign_set . '}'
  276 assign_set: assign_set . assign

    '}'  shift, and go to state 324
    '<'  shift, and go to state 325

    assign  go to state 326


State 241

   29 line: ATACS ASSIGNS assigns '\n' .

    $default  reduce using rule 29 (line)


State 242

  279 rate_assigns: '{' rate_assign_set . '}'
  280 rate_assign_set: rate_assign_set . rate_assign

    '}'  shift, and go to state 327
    '<'  shift, and go to state 328

    rate_assign  go to state 329


State 243

   30 line: ATACS RATE_ASSIGNS rate_assigns '\n' .

    $default  reduce using rule 30 (line)


State 244

  283 delay_assigns: '{' delay_assign_set . '}'
  284 delay_assign_set: delay_assign_set . delay_assign

    '}'  shift, and go to state 330
    '<'  shift, and go to state 331

    delay_assign  go to state 332


State 245

   31 line: ATACS DELAY_ASSIGNS delay_assigns '\n' .

    $default  reduce using rule 31 (line)


State 246

  293 priority_assigns: '{' priority_assign_set . '}'
  294 priority_assign_set: priority_assign_set . priority_assign

    '}'  shift, and go to state 333
    '<'  shift, and go to state 334

    priority_assign  go to state 335


State 247

   32 line: ATACS PRIORITY_ASSIGNS priority_assigns '\n' .

    $default  reduce using rule 32 (line)


State 248

  301 bool_assigns: '{' bool_assign_set . '}'
  302 bool_assign_set: bool_assign_set . bool_assign

    '}'  shift, and go to state 336
    '<'  shift, and go to state 337

    bool_assign  go to state 338


State 249

   34 line: ATACS BOOL_ASSIGNS bool_assigns '\n' .

    $default  reduce using rule 34 (line)


State 250

   46 variables: variables ID .

    $default  reduce using rule 46 (variables)


State 251

   12 line: ATACS VARIABLES variables '\n' .

    $default  reduce using rule 12 (line)


State 252

  132 init_rates: '{' init_rates_set . '}'
  133 init_rates_set: init_rates_set . init_rate

    '}'  shift, and go to state 339
    '<'  shift, and go to state 340

    init_rate  go to state 341


State 253

   24 line: ATACS INITRATES init_rates '\n' .

    $default  reduce using rule 24 (line)


State 254

  145 init_vals: '{' init_vals_set . '}'
  146 init_vals_set: init_vals_set . init_val

    '}'  shift, and go to state 342
    '<'  shift, and go to state 343

    init_val  go to state 344


State 255

   25 line: ATACS INITVALS init_vals '\n' .

    $default  reduce using rule 25 (line)


State 256

  297 transition_rates: '{' transition_rate_set . '}'
  298 transition_rate_set: transition_rate_set . transition_rate

    '}'  shift, and go to state 345
    '<'  shift, and go to state 346

    transition_rate  go to state 347


State 257

   33 line: ATACS TRANS_RATES transition_rates '\n' .

    $default  reduce using rule 33 (line)


State 258

   53 failtrans: failtrans ID .

    $default  reduce using rule 53 (failtrans)


State 259

   15 line: ATACS FAILTRANS failtrans '\n' .

    $default  reduce using rule 15 (line)


State 260

   55 nondisabling: nondisabling ID .

    $default  reduce using rule 55 (nondisabling)


State 261

   16 line: ATACS NONDISABLING nondisabling '\n' .

    $default  reduce using rule 16 (line)


State 262

  173 cons: '{' . ID '}'

    ID  shift, and go to state 348


State 263

  170 edge: node node ATACS cons . expr plow pup lower upper rate weight
  171     | node node ATACS cons . exprd plow pup lower upper rate weight

    '('  shift, and go to state 349

    $default  reduce using rule 174 (expr)

    expr   go to state 350
    exprd  go to state 351


State 264

  118 mark: '<' place ',' . signal_trans '>'
  120     | '<' place ',' . place '>'

    ID  shift, and go to state 1

    place         go to state 352
    signal_trans  go to state 353


State 265

  122 mark: '<' place '=' . INTEGER '>'
  123     | '<' place '=' . '-' INTEGER '>'
  124     | '<' place '=' . '[' '-' INF ',' '-' INTEGER ']' '>'
  125     | '<' place '=' . '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  126     | '<' place '=' . '[' '-' INF ',' INTEGER ']' '>'
  127     | '<' place '=' . '[' '-' INTEGER ',' INTEGER ']' '>'
  128     | '<' place '=' . '[' INTEGER ',' INTEGER ']' '>'
  129     | '<' place '=' . '[' '-' INF ',' INF ']' '>'
  130     | '<' place '=' . '[' '-' INTEGER ',' INF ']' '>'
  131     | '<' place '=' . '[' INTEGER ',' INF ']' '>'

    INTEGER  shift, and go to state 354
    '-'      shift, and go to state 355
    '['      shift, and go to state 356


State 266

  117 mark: '<' signal_trans ',' . signal_trans '>'
  119     | '<' signal_trans ',' . place '>'

    ID  shift, and go to state 1

    place         go to state 357
    signal_trans  go to state 358


State 267

  111 init_state: '[' ID ']' .

    $default  reduce using rule 111 (init_state)


State 268

  110 init_state: '[' INTEGER ']' .

    $default  reduce using rule 110 (init_state)


State 269

  267 signal_trans: ID . '+'
  268             | ID . '+' '/' INTEGER
  269             | ID . '-'
  270             | ID . '-' '/' INTEGER
  311 vevent: NOT ID .

    '+'  shift, and go to state 19
    '-'  shift, and go to state 20

    $default  reduce using rule 311 (vevent)


State 270

  313 vevent: NOT signal_trans .

    $default  reduce using rule 313 (vevent)


State 271

   36 line: ATACS VERIFY '{' vevents '}' . '\n'

    '\n'  shift, and go to state 359


State 272

  308 vevents: vevents ',' . vevent

    ID   shift, and go to state 182
    NOT  shift, and go to state 183

    signal_trans  go to state 184
    vevent        go to state 360


State 273

  267 signal_trans: ID . '+'
  268             | ID . '+' '/' INTEGER
  269             | ID . '-'
  270             | ID . '-' '/' INTEGER
  316 sevent: ID .

    '+'  shift, and go to state 19
    '-'  shift, and go to state 20

    $default  reduce using rule 316 (sevent)


State 274

  317 sevent: NOT . ID
  319       | NOT . signal_trans

    ID  shift, and go to state 361

    signal_trans  go to state 362


State 275

  318 sevent: signal_trans .

    $default  reduce using rule 318 (sevent)


State 276

   38 line: ATACS SEARCH @1 '{' sevents . '}' '\n'
  314 sevents: sevents . ',' sevent

    '}'  shift, and go to state 363
    ','  shift, and go to state 364


State 277

  315 sevents: sevent .

    $default  reduce using rule 315 (sevents)


State 278

   64 continuous: continuous ID '[' . '-' INF ',' '-' INTEGER ']'
   65           | continuous ID '[' . '-' INTEGER ',' '-' INTEGER ']'
   66           | continuous ID '[' . '-' INF ',' INTEGER ']'
   67           | continuous ID '[' . '-' INTEGER ',' INTEGER ']'
   68           | continuous ID '[' . INTEGER ',' INTEGER ']'
   69           | continuous ID '[' . '-' INF ',' INF ']'
   70           | continuous ID '[' . '-' INTEGER ',' INF ']'
   71           | continuous ID '[' . INTEGER ',' INF ']'

    INTEGER  shift, and go to state 365
    '-'      shift, and go to state 366


State 279

  158 rates: '{' rate_set '}' .

    $default  reduce using rule 158 (rates)


State 280

  161 trate: '<' . place '=' INTEGER '>'
  162      | '<' . place '=' '[' INTEGER ',' INTEGER ']' '>'

    ID  shift, and go to state 68

    place  go to state 367


State 281

  159 rate_set: rate_set trate .

    $default  reduce using rule 159 (rate_set)


State 282

   76 probproperty: Pr '=' '?' . '{' probprop '}'

    '{'  shift, and go to state 368


State 283

  210 relop: '>' '=' .

    $default  reduce using rule 210 (relop)


State 284

  208 relop: '<' '=' .

    $default  reduce using rule 208 (relop)


State 285

   75 probproperty: Pr relop REAL . '{' probprop '}'

    '{'  shift, and go to state 369


State 286

   78 probproperty: Ss '=' '?' . '{' probproperty '}'

    '{'  shift, and go to state 370


State 287

   77 probproperty: Ss relop REAL . '{' probproperty '}'

    '{'  shift, and go to state 371


State 288

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  196 term: INT '(' hsf . ')'

    IMPLIC  shift, and go to state 222
    ')'     shift, and go to state 372
    '|'     shift, and go to state 223


State 289

  182 relation: BIT '(' arithexpr . ',' arithexpr ')'
  185 arithexpr: arithexpr . '+' multexpr
  186          | arithexpr . '-' multexpr

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226
    ','  shift, and go to state 373


State 290

  195 term: RATE '(' ID . ')'

    ')'  shift, and go to state 374


State 291

  105 midtype: AU .

    $default  reduce using rule 105 (midtype)


State 292

  106 midtype: EU .

    $default  reduce using rule 106 (midtype)


State 293

   97 propinner: prop midtype . bound prop
   98          | prop midtype . bound hsf

    '['  shift, and go to state 220

    $default  reduce using rule 109 (bound)

    bound  go to state 375


State 294

   96 midprop: '{' propinner '}' .

    $default  reduce using rule 96 (midprop)


State 295

   99 propinner: hsf midtype . bound prop
  100          | hsf midtype . bound hsf

    '['  shift, and go to state 220

    $default  reduce using rule 109 (bound)

    bound  go to state 376


State 296

  194 term: '(' hsf ')' .

    $default  reduce using rule 194 (term)


State 297

   92 impliesprop: '-' '>' . prop

    EG   shift, and go to state 103
    EF   shift, and go to state 104
    AG   shift, and go to state 105
    AF   shift, and go to state 106
    '{'  shift, and go to state 126

    prop       go to state 377
    midprop    go to state 134
    fronttype  go to state 135


State 298

   88 andprop: '&' prop .

    $default  reduce using rule 88 (andprop)


State 299

   90 orprop: '|' prop .

    $default  reduce using rule 90 (orprop)


State 300

   87 andprop: andprop '&' . prop

    EG   shift, and go to state 103
    EF   shift, and go to state 104
    AG   shift, and go to state 105
    AF   shift, and go to state 106
    '{'  shift, and go to state 126

    prop       go to state 378
    midprop    go to state 134
    fronttype  go to state 135


State 301

   89 orprop: orprop '|' . prop

    EG   shift, and go to state 103
    EF   shift, and go to state 104
    AG   shift, and go to state 105
    AF   shift, and go to state 106
    '{'  shift, and go to state 126

    prop       go to state 379
    midprop    go to state 134
    fronttype  go to state 135


State 302

   91 impliesprop: impliesprop '-' . '>' prop

    '>'  shift, and go to state 380


State 303

  108 bound: '[' hsf . ',' hsf ']'
  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr

    IMPLIC  shift, and go to state 222
    ','     shift, and go to state 381
    '|'     shift, and go to state 223


State 304

  107 bound: '[' relop . hsf ']'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 382
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 305

   93 prop: fronttype bound '(' . prop ')'
   94     | fronttype bound '(' . hsf ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    EG           shift, and go to state 103
    EF           shift, and go to state 104
    AG           shift, and go to state 105
    AF           shift, and go to state 106
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '{'          shift, and go to state 126
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    prop       go to state 383
    midprop    go to state 134
    fronttype  go to state 135
    hsf        go to state 384
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 306

  177 hsf: hsf IMPLIC andexpr .
  179 andexpr: andexpr . '&' relation

    '&'  shift, and go to state 224

    $default  reduce using rule 177 (hsf)


State 307

  176 hsf: hsf '|' andexpr .
  179 andexpr: andexpr . '&' relation

    '&'  shift, and go to state 224

    $default  reduce using rule 176 (hsf)


State 308

  179 andexpr: andexpr '&' relation .

    $default  reduce using rule 179 (andexpr)


State 309

  185 arithexpr: arithexpr '+' multexpr .
  188 multexpr: multexpr . ID
  189         | multexpr . '*' term
  190         | multexpr . '/' term
  191         | multexpr . '%' term
  192         | multexpr . '^' term

    ID   shift, and go to state 229
    '*'  shift, and go to state 230
    '/'  shift, and go to state 231
    '%'  shift, and go to state 232
    '^'  shift, and go to state 233

    $default  reduce using rule 185 (arithexpr)


State 310

  186 arithexpr: arithexpr '-' multexpr .
  188 multexpr: multexpr . ID
  189         | multexpr . '*' term
  190         | multexpr . '/' term
  191         | multexpr . '%' term
  192         | multexpr . '^' term

    ID   shift, and go to state 229
    '*'  shift, and go to state 230
    '/'  shift, and go to state 231
    '%'  shift, and go to state 232
    '^'  shift, and go to state 233

    $default  reduce using rule 186 (arithexpr)


State 311

  183 relation: arithexpr relop arithexpr .
  185 arithexpr: arithexpr . '+' multexpr
  186          | arithexpr . '-' multexpr

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226

    $default  reduce using rule 183 (relation)


State 312

  189 multexpr: multexpr '*' term .

    $default  reduce using rule 189 (multexpr)


State 313

  190 multexpr: multexpr '/' term .

    $default  reduce using rule 190 (multexpr)


State 314

  191 multexpr: multexpr '%' term .

    $default  reduce using rule 191 (multexpr)


State 315

  192 multexpr: multexpr '^' term .

    $default  reduce using rule 192 (multexpr)


State 316

  185 arithexpr: arithexpr . '+' multexpr
  186          | arithexpr . '-' multexpr
  201 term: unop '(' arithexpr . ')'

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226
    ')'  shift, and go to state 385


State 317

  185 arithexpr: arithexpr . '+' multexpr
  186          | arithexpr . '-' multexpr
  202 term: binop '(' arithexpr . ',' arithexpr ')'

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226
    ','  shift, and go to state 386


State 318

  163 invariants: '{' invariant_set '}' .

    $default  reduce using rule 163 (invariants)


State 319

  166 invariant: '<' . place '=' '[' hsf_ineqs ']' '>'

    ID  shift, and go to state 68

    place  go to state 387


State 320

  164 invariant_set: invariant_set invariant .

    $default  reduce using rule 164 (invariant_set)


State 321

  271 enables: '{' enable_set '}' .

    $default  reduce using rule 271 (enables)


State 322

  274 enable: '<' . node '=' '[' hsf_ineqs ']' '>'

    ID  shift, and go to state 1

    place         go to state 14
    node          go to state 388
    signal_trans  go to state 18


State 323

  272 enable_set: enable_set enable .

    $default  reduce using rule 272 (enable_set)


State 324

  275 assigns: '{' assign_set '}' .

    $default  reduce using rule 275 (assigns)


State 325

  278 assign: '<' . node '=' '[' ineqs ']' '>'

    ID  shift, and go to state 1

    place         go to state 14
    node          go to state 389
    signal_trans  go to state 18


State 326

  276 assign_set: assign_set assign .

    $default  reduce using rule 276 (assign_set)


State 327

  279 rate_assigns: '{' rate_assign_set '}' .

    $default  reduce using rule 279 (rate_assigns)


State 328

  282 rate_assign: '<' . node '=' '[' rate_ineqs ']' '>'

    ID  shift, and go to state 1

    place         go to state 14
    node          go to state 390
    signal_trans  go to state 18


State 329

  280 rate_assign_set: rate_assign_set rate_assign .

    $default  reduce using rule 280 (rate_assign_set)


State 330

  283 delay_assigns: '{' delay_assign_set '}' .

    $default  reduce using rule 283 (delay_assigns)


State 331

  286 delay_assign: '<' . node '=' UNIFORM '(' INTEGER ',' INTEGER ')' '>'
  287             | '<' . node '=' UNIFORM '(' INTEGER ',' INF ')' '>'
  288             | '<' . node '=' EXPONENTIAL '(' hsf ')' '>'
  289             | '<' . node '=' '[' INTEGER ',' INTEGER ']' '>'
  290             | '<' . node '=' '[' INTEGER ',' INF ']' '>'
  291             | '<' . node '=' INTEGER '>'
  292             | '<' . node '=' '[' hsf ']' '>'

    ID  shift, and go to state 1

    place         go to state 14
    node          go to state 391
    signal_trans  go to state 18


State 332

  284 delay_assign_set: delay_assign_set delay_assign .

    $default  reduce using rule 284 (delay_assign_set)


State 333

  293 priority_assigns: '{' priority_assign_set '}' .

    $default  reduce using rule 293 (priority_assigns)


State 334

  296 priority_assign: '<' . node '=' '[' hsf ']' '>'

    ID  shift, and go to state 1

    place         go to state 14
    node          go to state 392
    signal_trans  go to state 18


State 335

  294 priority_assign_set: priority_assign_set priority_assign .

    $default  reduce using rule 294 (priority_assign_set)


State 336

  301 bool_assigns: '{' bool_assign_set '}' .

    $default  reduce using rule 301 (bool_assigns)


State 337

  304 bool_assign: '<' . node '=' '[' bool_ineqs ']' '>'

    ID  shift, and go to state 1

    place         go to state 14
    node          go to state 393
    signal_trans  go to state 18


State 338

  302 bool_assign_set: bool_assign_set bool_assign .

    $default  reduce using rule 302 (bool_assign_set)


State 339

  132 init_rates: '{' init_rates_set '}' .

    $default  reduce using rule 132 (init_rates)


State 340

  135 init_rate: '<' . variable '=' INTEGER '>'
  136          | '<' . variable '=' '-' INTEGER '>'
  137          | '<' . variable '=' '[' '-' INF ',' '-' INTEGER ']' '>'
  138          | '<' . variable '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  139          | '<' . variable '=' '[' '-' INF ',' INTEGER ']' '>'
  140          | '<' . variable '=' '[' '-' INTEGER ',' INTEGER ']' '>'
  141          | '<' . variable '=' '[' INTEGER ',' INTEGER ']' '>'
  142          | '<' . variable '=' '[' '-' INF ',' INF ']' '>'
  143          | '<' . variable '=' '[' '-' INTEGER ':' INF ']' '>'
  144          | '<' . variable '=' '[' INTEGER ',' INF ']' '>'

    ID  shift, and go to state 394

    variable  go to state 395


State 341

  133 init_rates_set: init_rates_set init_rate .

    $default  reduce using rule 133 (init_rates_set)


State 342

  145 init_vals: '{' init_vals_set '}' .

    $default  reduce using rule 145 (init_vals)


State 343

  148 init_val: '<' . variable '=' INTEGER '>'
  149         | '<' . variable '=' '-' INTEGER '>'
  150         | '<' . variable '=' '[' '-' INF ',' '-' INTEGER ']' '>'
  151         | '<' . variable '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  152         | '<' . variable '=' '[' '-' INF ',' INTEGER ']' '>'
  153         | '<' . variable '=' '[' '-' INTEGER ',' INTEGER ']' '>'
  154         | '<' . variable '=' '[' INTEGER ',' INTEGER ']' '>'
  155         | '<' . variable '=' '[' '-' INF ',' INF ']' '>'
  156         | '<' . variable '=' '[' '-' INTEGER ',' INF ']' '>'
  157         | '<' . variable '=' '[' INTEGER ',' INF ']' '>'

    ID  shift, and go to state 394

    variable  go to state 396


State 344

  146 init_vals_set: init_vals_set init_val .

    $default  reduce using rule 146 (init_vals_set)


State 345

  297 transition_rates: '{' transition_rate_set '}' .

    $default  reduce using rule 297 (transition_rates)


State 346

  300 transition_rate: '<' . node '=' '[' hsf ']' '>'

    ID  shift, and go to state 1

    place         go to state 14
    node          go to state 397
    signal_trans  go to state 18


State 347

  298 transition_rate_set: transition_rate_set transition_rate .

    $default  reduce using rule 298 (transition_rate_set)


State 348

  173 cons: '{' ID . '}'

    '}'  shift, and go to state 398


State 349

  175 expr: '(' . hsf ')'
  241 exprd: '(' . hsf DISABLE

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 399
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 350

  170 edge: node node ATACS cons expr . plow pup lower upper rate weight

    '/'   shift, and go to state 400
    '\\'  shift, and go to state 401

    $default  reduce using rule 242 (plow)

    plow  go to state 402


State 351

  171 edge: node node ATACS cons exprd . plow pup lower upper rate weight

    '/'   shift, and go to state 400
    '\\'  shift, and go to state 401

    $default  reduce using rule 242 (plow)

    plow  go to state 403


State 352

  120 mark: '<' place ',' place . '>'

    '>'  shift, and go to state 404


State 353

  118 mark: '<' place ',' signal_trans . '>'

    '>'  shift, and go to state 405


State 354

  122 mark: '<' place '=' INTEGER . '>'

    '>'  shift, and go to state 406


State 355

  123 mark: '<' place '=' '-' . INTEGER '>'

    INTEGER  shift, and go to state 407


State 356

  124 mark: '<' place '=' '[' . '-' INF ',' '-' INTEGER ']' '>'
  125     | '<' place '=' '[' . '-' INTEGER ',' '-' INTEGER ']' '>'
  126     | '<' place '=' '[' . '-' INF ',' INTEGER ']' '>'
  127     | '<' place '=' '[' . '-' INTEGER ',' INTEGER ']' '>'
  128     | '<' place '=' '[' . INTEGER ',' INTEGER ']' '>'
  129     | '<' place '=' '[' . '-' INF ',' INF ']' '>'
  130     | '<' place '=' '[' . '-' INTEGER ',' INF ']' '>'
  131     | '<' place '=' '[' . INTEGER ',' INF ']' '>'

    INTEGER  shift, and go to state 408
    '-'      shift, and go to state 409


State 357

  119 mark: '<' signal_trans ',' place . '>'

    '>'  shift, and go to state 410


State 358

  117 mark: '<' signal_trans ',' signal_trans . '>'

    '>'  shift, and go to state 411


State 359

   36 line: ATACS VERIFY '{' vevents '}' '\n' .

    $default  reduce using rule 36 (line)


State 360

  308 vevents: vevents ',' vevent .

    $default  reduce using rule 308 (vevents)


State 361

  267 signal_trans: ID . '+'
  268             | ID . '+' '/' INTEGER
  269             | ID . '-'
  270             | ID . '-' '/' INTEGER
  317 sevent: NOT ID .

    '+'  shift, and go to state 19
    '-'  shift, and go to state 20

    $default  reduce using rule 317 (sevent)


State 362

  319 sevent: NOT signal_trans .

    $default  reduce using rule 319 (sevent)


State 363

   38 line: ATACS SEARCH @1 '{' sevents '}' . '\n'

    '\n'  shift, and go to state 412


State 364

  314 sevents: sevents ',' . sevent

    ID   shift, and go to state 273
    NOT  shift, and go to state 274

    signal_trans  go to state 275
    sevent        go to state 413


State 365

   68 continuous: continuous ID '[' INTEGER . ',' INTEGER ']'
   71           | continuous ID '[' INTEGER . ',' INF ']'

    ','  shift, and go to state 414


State 366

   64 continuous: continuous ID '[' '-' . INF ',' '-' INTEGER ']'
   65           | continuous ID '[' '-' . INTEGER ',' '-' INTEGER ']'
   66           | continuous ID '[' '-' . INF ',' INTEGER ']'
   67           | continuous ID '[' '-' . INTEGER ',' INTEGER ']'
   69           | continuous ID '[' '-' . INF ',' INF ']'
   70           | continuous ID '[' '-' . INTEGER ',' INF ']'

    INTEGER  shift, and go to state 415
    INF      shift, and go to state 416


State 367

  161 trate: '<' place . '=' INTEGER '>'
  162      | '<' place . '=' '[' INTEGER ',' INTEGER ']' '>'

    '='  shift, and go to state 417


State 368

   76 probproperty: Pr '=' '?' '{' . probprop '}'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    Pr           shift, and go to state 101
    Ss           shift, and go to state 102
    PG           shift, and go to state 418
    PF           shift, and go to state 419
    PX           shift, and go to state 420
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    probproperty  go to state 421
    probprop      go to state 422
    hsf           go to state 136
    andexpr       go to state 137
    relation      go to state 138
    arithexpr     go to state 139
    multexpr      go to state 140
    term          go to state 141
    unop          go to state 142
    binop         go to state 143


State 369

   75 probproperty: Pr relop REAL '{' . probprop '}'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    Pr           shift, and go to state 101
    Ss           shift, and go to state 102
    PG           shift, and go to state 418
    PF           shift, and go to state 419
    PX           shift, and go to state 420
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    probproperty  go to state 421
    probprop      go to state 423
    hsf           go to state 136
    andexpr       go to state 137
    relation      go to state 138
    arithexpr     go to state 139
    multexpr      go to state 140
    term          go to state 141
    unop          go to state 142
    binop         go to state 143


State 370

   78 probproperty: Ss '=' '?' '{' . probproperty '}'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    Pr           shift, and go to state 101
    Ss           shift, and go to state 102
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    probproperty  go to state 424
    hsf           go to state 136
    andexpr       go to state 137
    relation      go to state 138
    arithexpr     go to state 139
    multexpr      go to state 140
    term          go to state 141
    unop          go to state 142
    binop         go to state 143


State 371

   77 probproperty: Ss relop REAL '{' . probproperty '}'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    Pr           shift, and go to state 101
    Ss           shift, and go to state 102
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    probproperty  go to state 425
    hsf           go to state 136
    andexpr       go to state 137
    relation      go to state 138
    arithexpr     go to state 139
    multexpr      go to state 140
    term          go to state 141
    unop          go to state 142
    binop         go to state 143


State 372

  196 term: INT '(' hsf ')' .

    $default  reduce using rule 196 (term)


State 373

  182 relation: BIT '(' arithexpr ',' . arithexpr ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    arithexpr  go to state 426
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 374

  195 term: RATE '(' ID ')' .

    $default  reduce using rule 195 (term)


State 375

   97 propinner: prop midtype bound . prop
   98          | prop midtype bound . hsf

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    EG           shift, and go to state 103
    EF           shift, and go to state 104
    AG           shift, and go to state 105
    AF           shift, and go to state 106
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '{'          shift, and go to state 126
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    prop       go to state 427
    midprop    go to state 134
    fronttype  go to state 135
    hsf        go to state 428
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 376

   99 propinner: hsf midtype bound . prop
  100          | hsf midtype bound . hsf

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    EG           shift, and go to state 103
    EF           shift, and go to state 104
    AG           shift, and go to state 105
    AF           shift, and go to state 106
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '{'          shift, and go to state 126
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    prop       go to state 429
    midprop    go to state 134
    fronttype  go to state 135
    hsf        go to state 430
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 377

   92 impliesprop: '-' '>' prop .

    $default  reduce using rule 92 (impliesprop)


State 378

   87 andprop: andprop '&' prop .

    $default  reduce using rule 87 (andprop)


State 379

   89 orprop: orprop '|' prop .

    $default  reduce using rule 89 (orprop)


State 380

   91 impliesprop: impliesprop '-' '>' . prop

    EG   shift, and go to state 103
    EF   shift, and go to state 104
    AG   shift, and go to state 105
    AF   shift, and go to state 106
    '{'  shift, and go to state 126

    prop       go to state 431
    midprop    go to state 134
    fronttype  go to state 135


State 381

  108 bound: '[' hsf ',' . hsf ']'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 432
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 382

  107 bound: '[' relop hsf . ']'
  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr

    IMPLIC  shift, and go to state 222
    ']'     shift, and go to state 433
    '|'     shift, and go to state 223


State 383

   93 prop: fronttype bound '(' prop . ')'

    ')'  shift, and go to state 434


State 384

   94 prop: fronttype bound '(' hsf . ')'
  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr

    IMPLIC  shift, and go to state 222
    ')'     shift, and go to state 435
    '|'     shift, and go to state 223


State 385

  201 term: unop '(' arithexpr ')' .

    $default  reduce using rule 201 (term)


State 386

  202 term: binop '(' arithexpr ',' . arithexpr ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128

    arithexpr  go to state 436
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 387

  166 invariant: '<' place . '=' '[' hsf_ineqs ']' '>'

    '='  shift, and go to state 437


State 388

  274 enable: '<' node . '=' '[' hsf_ineqs ']' '>'

    '='  shift, and go to state 438


State 389

  278 assign: '<' node . '=' '[' ineqs ']' '>'

    '='  shift, and go to state 439


State 390

  282 rate_assign: '<' node . '=' '[' rate_ineqs ']' '>'

    '='  shift, and go to state 440


State 391

  286 delay_assign: '<' node . '=' UNIFORM '(' INTEGER ',' INTEGER ')' '>'
  287             | '<' node . '=' UNIFORM '(' INTEGER ',' INF ')' '>'
  288             | '<' node . '=' EXPONENTIAL '(' hsf ')' '>'
  289             | '<' node . '=' '[' INTEGER ',' INTEGER ']' '>'
  290             | '<' node . '=' '[' INTEGER ',' INF ']' '>'
  291             | '<' node . '=' INTEGER '>'
  292             | '<' node . '=' '[' hsf ']' '>'

    '='  shift, and go to state 441


State 392

  296 priority_assign: '<' node . '=' '[' hsf ']' '>'

    '='  shift, and go to state 442


State 393

  304 bool_assign: '<' node . '=' '[' bool_ineqs ']' '>'

    '='  shift, and go to state 443


State 394

   47 variable: ID .

    $default  reduce using rule 47 (variable)


State 395

  135 init_rate: '<' variable . '=' INTEGER '>'
  136          | '<' variable . '=' '-' INTEGER '>'
  137          | '<' variable . '=' '[' '-' INF ',' '-' INTEGER ']' '>'
  138          | '<' variable . '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  139          | '<' variable . '=' '[' '-' INF ',' INTEGER ']' '>'
  140          | '<' variable . '=' '[' '-' INTEGER ',' INTEGER ']' '>'
  141          | '<' variable . '=' '[' INTEGER ',' INTEGER ']' '>'
  142          | '<' variable . '=' '[' '-' INF ',' INF ']' '>'
  143          | '<' variable . '=' '[' '-' INTEGER ':' INF ']' '>'
  144          | '<' variable . '=' '[' INTEGER ',' INF ']' '>'

    '='  shift, and go to state 444


State 396

  148 init_val: '<' variable . '=' INTEGER '>'
  149         | '<' variable . '=' '-' INTEGER '>'
  150         | '<' variable . '=' '[' '-' INF ',' '-' INTEGER ']' '>'
  151         | '<' variable . '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  152         | '<' variable . '=' '[' '-' INF ',' INTEGER ']' '>'
  153         | '<' variable . '=' '[' '-' INTEGER ',' INTEGER ']' '>'
  154         | '<' variable . '=' '[' INTEGER ',' INTEGER ']' '>'
  155         | '<' variable . '=' '[' '-' INF ',' INF ']' '>'
  156         | '<' variable . '=' '[' '-' INTEGER ',' INF ']' '>'
  157         | '<' variable . '=' '[' INTEGER ',' INF ']' '>'

    '='  shift, and go to state 445


State 397

  300 transition_rate: '<' node . '=' '[' hsf ']' '>'

    '='  shift, and go to state 446


State 398

  173 cons: '{' ID '}' .

    $default  reduce using rule 173 (cons)


State 399

  175 expr: '(' hsf . ')'
  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  241 exprd: '(' hsf . DISABLE

    DISABLE  shift, and go to state 447
    IMPLIC   shift, and go to state 222
    ')'      shift, and go to state 448
    '|'      shift, and go to state 223


State 400

  243 plow: '/' . INTEGER
  245     | '/' . '-' INTEGER
  247     | '/' . '-' INF

    INTEGER  shift, and go to state 449
    '-'      shift, and go to state 450


State 401

  244 plow: '\\' . INTEGER
  246     | '\\' . '-' INTEGER
  248     | '\\' . '-' INF

    INTEGER  shift, and go to state 451
    '-'      shift, and go to state 452


State 402

  170 edge: node node ATACS cons expr plow . pup lower upper rate weight

    ';'  shift, and go to state 453

    $default  reduce using rule 249 (pup)

    pup  go to state 454


State 403

  171 edge: node node ATACS cons exprd plow . pup lower upper rate weight

    ';'  shift, and go to state 453

    $default  reduce using rule 249 (pup)

    pup  go to state 455


State 404

  120 mark: '<' place ',' place '>' .

    $default  reduce using rule 120 (mark)


State 405

  118 mark: '<' place ',' signal_trans '>' .

    $default  reduce using rule 118 (mark)


State 406

  122 mark: '<' place '=' INTEGER '>' .

    $default  reduce using rule 122 (mark)


State 407

  123 mark: '<' place '=' '-' INTEGER . '>'

    '>'  shift, and go to state 456


State 408

  128 mark: '<' place '=' '[' INTEGER . ',' INTEGER ']' '>'
  131     | '<' place '=' '[' INTEGER . ',' INF ']' '>'

    ','  shift, and go to state 457


State 409

  124 mark: '<' place '=' '[' '-' . INF ',' '-' INTEGER ']' '>'
  125     | '<' place '=' '[' '-' . INTEGER ',' '-' INTEGER ']' '>'
  126     | '<' place '=' '[' '-' . INF ',' INTEGER ']' '>'
  127     | '<' place '=' '[' '-' . INTEGER ',' INTEGER ']' '>'
  129     | '<' place '=' '[' '-' . INF ',' INF ']' '>'
  130     | '<' place '=' '[' '-' . INTEGER ',' INF ']' '>'

    INTEGER  shift, and go to state 458
    INF      shift, and go to state 459


State 410

  119 mark: '<' signal_trans ',' place '>' .

    $default  reduce using rule 119 (mark)


State 411

  117 mark: '<' signal_trans ',' signal_trans '>' .

    $default  reduce using rule 117 (mark)


State 412

   38 line: ATACS SEARCH @1 '{' sevents '}' '\n' .

    $default  reduce using rule 38 (line)


State 413

  314 sevents: sevents ',' sevent .

    $default  reduce using rule 314 (sevents)


State 414

   68 continuous: continuous ID '[' INTEGER ',' . INTEGER ']'
   71           | continuous ID '[' INTEGER ',' . INF ']'

    INTEGER  shift, and go to state 460
    INF      shift, and go to state 461


State 415

   65 continuous: continuous ID '[' '-' INTEGER . ',' '-' INTEGER ']'
   67           | continuous ID '[' '-' INTEGER . ',' INTEGER ']'
   70           | continuous ID '[' '-' INTEGER . ',' INF ']'

    ','  shift, and go to state 462


State 416

   64 continuous: continuous ID '[' '-' INF . ',' '-' INTEGER ']'
   66           | continuous ID '[' '-' INF . ',' INTEGER ']'
   69           | continuous ID '[' '-' INF . ',' INF ']'

    ','  shift, and go to state 463


State 417

  161 trate: '<' place '=' . INTEGER '>'
  162      | '<' place '=' . '[' INTEGER ',' INTEGER ']' '>'

    INTEGER  shift, and go to state 464
    '['      shift, and go to state 465


State 418

   79 probprop: PG . bound '(' probproperty ')'

    '['  shift, and go to state 220

    $default  reduce using rule 109 (bound)

    bound  go to state 466


State 419

   80 probprop: PF . bound '(' probproperty ')'

    '['  shift, and go to state 220

    $default  reduce using rule 109 (bound)

    bound  go to state 467


State 420

   81 probprop: PX . '(' probproperty ')'

    '('  shift, and go to state 468


State 421

   82 probprop: probproperty . PU bound probproperty

    PU  shift, and go to state 469


State 422

   76 probproperty: Pr '=' '?' '{' probprop . '}'

    '}'  shift, and go to state 470


State 423

   75 probproperty: Pr relop REAL '{' probprop . '}'

    '}'  shift, and go to state 471


State 424

   78 probproperty: Ss '=' '?' '{' probproperty . '}'

    '}'  shift, and go to state 472


State 425

   77 probproperty: Ss relop REAL '{' probproperty . '}'

    '}'  shift, and go to state 473


State 426

  182 relation: BIT '(' arithexpr ',' arithexpr . ')'
  185 arithexpr: arithexpr . '+' multexpr
  186          | arithexpr . '-' multexpr

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226
    ')'  shift, and go to state 474


State 427

   97 propinner: prop midtype bound prop .

    $default  reduce using rule 97 (propinner)


State 428

   98 propinner: prop midtype bound hsf .
  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr

    IMPLIC  shift, and go to state 222
    '|'     shift, and go to state 223

    $default  reduce using rule 98 (propinner)


State 429

   99 propinner: hsf midtype bound prop .

    $default  reduce using rule 99 (propinner)


State 430

  100 propinner: hsf midtype bound hsf .
  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr

    IMPLIC  shift, and go to state 222
    '|'     shift, and go to state 223

    $default  reduce using rule 100 (propinner)


State 431

   91 impliesprop: impliesprop '-' '>' prop .

    $default  reduce using rule 91 (impliesprop)


State 432

  108 bound: '[' hsf ',' hsf . ']'
  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr

    IMPLIC  shift, and go to state 222
    ']'     shift, and go to state 475
    '|'     shift, and go to state 223


State 433

  107 bound: '[' relop hsf ']' .

    $default  reduce using rule 107 (bound)


State 434

   93 prop: fronttype bound '(' prop ')' .

    $default  reduce using rule 93 (prop)


State 435

   94 prop: fronttype bound '(' hsf ')' .

    $default  reduce using rule 94 (prop)


State 436

  185 arithexpr: arithexpr . '+' multexpr
  186          | arithexpr . '-' multexpr
  202 term: binop '(' arithexpr ',' arithexpr . ')'

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226
    ')'  shift, and go to state 476


State 437

  166 invariant: '<' place '=' . '[' hsf_ineqs ']' '>'

    '['  shift, and go to state 477


State 438

  274 enable: '<' node '=' . '[' hsf_ineqs ']' '>'

    '['  shift, and go to state 478


State 439

  278 assign: '<' node '=' . '[' ineqs ']' '>'

    '['  shift, and go to state 479


State 440

  282 rate_assign: '<' node '=' . '[' rate_ineqs ']' '>'

    '['  shift, and go to state 480


State 441

  286 delay_assign: '<' node '=' . UNIFORM '(' INTEGER ',' INTEGER ')' '>'
  287             | '<' node '=' . UNIFORM '(' INTEGER ',' INF ')' '>'
  288             | '<' node '=' . EXPONENTIAL '(' hsf ')' '>'
  289             | '<' node '=' . '[' INTEGER ',' INTEGER ']' '>'
  290             | '<' node '=' . '[' INTEGER ',' INF ']' '>'
  291             | '<' node '=' . INTEGER '>'
  292             | '<' node '=' . '[' hsf ']' '>'

    INTEGER      shift, and go to state 481
    UNIFORM      shift, and go to state 482
    EXPONENTIAL  shift, and go to state 483
    '['          shift, and go to state 484


State 442

  296 priority_assign: '<' node '=' . '[' hsf ']' '>'

    '['  shift, and go to state 485


State 443

  304 bool_assign: '<' node '=' . '[' bool_ineqs ']' '>'

    '['  shift, and go to state 486


State 444

  135 init_rate: '<' variable '=' . INTEGER '>'
  136          | '<' variable '=' . '-' INTEGER '>'
  137          | '<' variable '=' . '[' '-' INF ',' '-' INTEGER ']' '>'
  138          | '<' variable '=' . '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  139          | '<' variable '=' . '[' '-' INF ',' INTEGER ']' '>'
  140          | '<' variable '=' . '[' '-' INTEGER ',' INTEGER ']' '>'
  141          | '<' variable '=' . '[' INTEGER ',' INTEGER ']' '>'
  142          | '<' variable '=' . '[' '-' INF ',' INF ']' '>'
  143          | '<' variable '=' . '[' '-' INTEGER ':' INF ']' '>'
  144          | '<' variable '=' . '[' INTEGER ',' INF ']' '>'

    INTEGER  shift, and go to state 487
    '-'      shift, and go to state 488
    '['      shift, and go to state 489


State 445

  148 init_val: '<' variable '=' . INTEGER '>'
  149         | '<' variable '=' . '-' INTEGER '>'
  150         | '<' variable '=' . '[' '-' INF ',' '-' INTEGER ']' '>'
  151         | '<' variable '=' . '[' '-' INTEGER ',' '-' INTEGER ']' '>'
  152         | '<' variable '=' . '[' '-' INF ',' INTEGER ']' '>'
  153         | '<' variable '=' . '[' '-' INTEGER ',' INTEGER ']' '>'
  154         | '<' variable '=' . '[' INTEGER ',' INTEGER ']' '>'
  155         | '<' variable '=' . '[' '-' INF ',' INF ']' '>'
  156         | '<' variable '=' . '[' '-' INTEGER ',' INF ']' '>'
  157         | '<' variable '=' . '[' INTEGER ',' INF ']' '>'

    INTEGER  shift, and go to state 490
    '-'      shift, and go to state 491
    '['      shift, and go to state 492


State 446

  300 transition_rate: '<' node '=' . '[' hsf ']' '>'

    '['  shift, and go to state 493


State 447

  241 exprd: '(' hsf DISABLE .

    $default  reduce using rule 241 (exprd)


State 448

  175 expr: '(' hsf ')' .

    $default  reduce using rule 175 (expr)


State 449

  243 plow: '/' INTEGER .

    $default  reduce using rule 243 (plow)


State 450

  245 plow: '/' '-' . INTEGER
  247     | '/' '-' . INF

    INTEGER  shift, and go to state 494
    INF      shift, and go to state 495


State 451

  244 plow: '\\' INTEGER .

    $default  reduce using rule 244 (plow)


State 452

  246 plow: '\\' '-' . INTEGER
  248     | '\\' '-' . INF

    INTEGER  shift, and go to state 496
    INF      shift, and go to state 497


State 453

  250 pup: ';' . '-' INTEGER '\\'
  251    | ';' . '-' INTEGER '/'
  252    | ';' . INTEGER '\\'
  253    | ';' . INTEGER '/'
  254    | ';' . INF '\\'
  255    | ';' . INF '/'

    INTEGER  shift, and go to state 498
    INF      shift, and go to state 499
    '-'      shift, and go to state 500


State 454

  170 edge: node node ATACS cons expr plow pup . lower upper rate weight

    '['  shift, and go to state 501

    $default  reduce using rule 256 (lower)

    lower  go to state 502


State 455

  171 edge: node node ATACS cons exprd plow pup . lower upper rate weight

    '['  shift, and go to state 501

    $default  reduce using rule 256 (lower)

    lower  go to state 503


State 456

  123 mark: '<' place '=' '-' INTEGER '>' .

    $default  reduce using rule 123 (mark)


State 457

  128 mark: '<' place '=' '[' INTEGER ',' . INTEGER ']' '>'
  131     | '<' place '=' '[' INTEGER ',' . INF ']' '>'

    INTEGER  shift, and go to state 504
    INF      shift, and go to state 505


State 458

  125 mark: '<' place '=' '[' '-' INTEGER . ',' '-' INTEGER ']' '>'
  127     | '<' place '=' '[' '-' INTEGER . ',' INTEGER ']' '>'
  130     | '<' place '=' '[' '-' INTEGER . ',' INF ']' '>'

    ','  shift, and go to state 506


State 459

  124 mark: '<' place '=' '[' '-' INF . ',' '-' INTEGER ']' '>'
  126     | '<' place '=' '[' '-' INF . ',' INTEGER ']' '>'
  129     | '<' place '=' '[' '-' INF . ',' INF ']' '>'

    ','  shift, and go to state 507


State 460

   68 continuous: continuous ID '[' INTEGER ',' INTEGER . ']'

    ']'  shift, and go to state 508


State 461

   71 continuous: continuous ID '[' INTEGER ',' INF . ']'

    ']'  shift, and go to state 509


State 462

   65 continuous: continuous ID '[' '-' INTEGER ',' . '-' INTEGER ']'
   67           | continuous ID '[' '-' INTEGER ',' . INTEGER ']'
   70           | continuous ID '[' '-' INTEGER ',' . INF ']'

    INTEGER  shift, and go to state 510
    INF      shift, and go to state 511
    '-'      shift, and go to state 512


State 463

   64 continuous: continuous ID '[' '-' INF ',' . '-' INTEGER ']'
   66           | continuous ID '[' '-' INF ',' . INTEGER ']'
   69           | continuous ID '[' '-' INF ',' . INF ']'

    INTEGER  shift, and go to state 513
    INF      shift, and go to state 514
    '-'      shift, and go to state 515


State 464

  161 trate: '<' place '=' INTEGER . '>'

    '>'  shift, and go to state 516


State 465

  162 trate: '<' place '=' '[' . INTEGER ',' INTEGER ']' '>'

    INTEGER  shift, and go to state 517


State 466

   79 probprop: PG bound . '(' probproperty ')'

    '('  shift, and go to state 518


State 467

   80 probprop: PF bound . '(' probproperty ')'

    '('  shift, and go to state 519


State 468

   81 probprop: PX '(' . probproperty ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    Pr           shift, and go to state 101
    Ss           shift, and go to state 102
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    probproperty  go to state 520
    hsf           go to state 136
    andexpr       go to state 137
    relation      go to state 138
    arithexpr     go to state 139
    multexpr      go to state 140
    term          go to state 141
    unop          go to state 142
    binop         go to state 143


State 469

   82 probprop: probproperty PU . bound probproperty

    '['  shift, and go to state 220

    $default  reduce using rule 109 (bound)

    bound  go to state 521


State 470

   76 probproperty: Pr '=' '?' '{' probprop '}' .

    $default  reduce using rule 76 (probproperty)


State 471

   75 probproperty: Pr relop REAL '{' probprop '}' .

    $default  reduce using rule 75 (probproperty)


State 472

   78 probproperty: Ss '=' '?' '{' probproperty '}' .

    $default  reduce using rule 78 (probproperty)


State 473

   77 probproperty: Ss relop REAL '{' probproperty '}' .

    $default  reduce using rule 77 (probproperty)


State 474

  182 relation: BIT '(' arithexpr ',' arithexpr ')' .

    $default  reduce using rule 182 (relation)


State 475

  108 bound: '[' hsf ',' hsf ']' .

    $default  reduce using rule 108 (bound)


State 476

  202 term: binop '(' arithexpr ',' arithexpr ')' .

    $default  reduce using rule 202 (term)


State 477

  166 invariant: '<' place '=' '[' . hsf_ineqs ']' '>'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 522
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143
    hsf_ineqs  go to state 523


State 478

  274 enable: '<' node '=' '[' . hsf_ineqs ']' '>'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 522
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143
    hsf_ineqs  go to state 524


State 479

  278 assign: '<' node '=' '[' . ineqs ']' '>'

    ID  shift, and go to state 68

    place  go to state 525
    ineqs  go to state 526
    ineq   go to state 527


State 480

  282 rate_assign: '<' node '=' '[' . rate_ineqs ']' '>'

    ID  shift, and go to state 68

    place       go to state 528
    rate_ineqs  go to state 529
    rate_ineq   go to state 530


State 481

  291 delay_assign: '<' node '=' INTEGER . '>'

    '>'  shift, and go to state 531


State 482

  286 delay_assign: '<' node '=' UNIFORM . '(' INTEGER ',' INTEGER ')' '>'
  287             | '<' node '=' UNIFORM . '(' INTEGER ',' INF ')' '>'

    '('  shift, and go to state 532


State 483

  288 delay_assign: '<' node '=' EXPONENTIAL . '(' hsf ')' '>'

    '('  shift, and go to state 533


State 484

  289 delay_assign: '<' node '=' '[' . INTEGER ',' INTEGER ']' '>'
  290             | '<' node '=' '[' . INTEGER ',' INF ']' '>'
  292             | '<' node '=' '[' . hsf ']' '>'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 534
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 535
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 485

  296 priority_assign: '<' node '=' '[' . hsf ']' '>'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 536
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 486

  304 bool_assign: '<' node '=' '[' . bool_ineqs ']' '>'

    ID  shift, and go to state 537

    bool_ineqs  go to state 538
    bool_ineq   go to state 539


State 487

  135 init_rate: '<' variable '=' INTEGER . '>'

    '>'  shift, and go to state 540


State 488

  136 init_rate: '<' variable '=' '-' . INTEGER '>'

    INTEGER  shift, and go to state 541


State 489

  137 init_rate: '<' variable '=' '[' . '-' INF ',' '-' INTEGER ']' '>'
  138          | '<' variable '=' '[' . '-' INTEGER ',' '-' INTEGER ']' '>'
  139          | '<' variable '=' '[' . '-' INF ',' INTEGER ']' '>'
  140          | '<' variable '=' '[' . '-' INTEGER ',' INTEGER ']' '>'
  141          | '<' variable '=' '[' . INTEGER ',' INTEGER ']' '>'
  142          | '<' variable '=' '[' . '-' INF ',' INF ']' '>'
  143          | '<' variable '=' '[' . '-' INTEGER ':' INF ']' '>'
  144          | '<' variable '=' '[' . INTEGER ',' INF ']' '>'

    INTEGER  shift, and go to state 542
    '-'      shift, and go to state 543


State 490

  148 init_val: '<' variable '=' INTEGER . '>'

    '>'  shift, and go to state 544


State 491

  149 init_val: '<' variable '=' '-' . INTEGER '>'

    INTEGER  shift, and go to state 545


State 492

  150 init_val: '<' variable '=' '[' . '-' INF ',' '-' INTEGER ']' '>'
  151         | '<' variable '=' '[' . '-' INTEGER ',' '-' INTEGER ']' '>'
  152         | '<' variable '=' '[' . '-' INF ',' INTEGER ']' '>'
  153         | '<' variable '=' '[' . '-' INTEGER ',' INTEGER ']' '>'
  154         | '<' variable '=' '[' . INTEGER ',' INTEGER ']' '>'
  155         | '<' variable '=' '[' . '-' INF ',' INF ']' '>'
  156         | '<' variable '=' '[' . '-' INTEGER ',' INF ']' '>'
  157         | '<' variable '=' '[' . INTEGER ',' INF ']' '>'

    INTEGER  shift, and go to state 546
    '-'      shift, and go to state 547


State 493

  300 transition_rate: '<' node '=' '[' . hsf ']' '>'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 548
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 494

  245 plow: '/' '-' INTEGER .

    $default  reduce using rule 245 (plow)


State 495

  247 plow: '/' '-' INF .

    $default  reduce using rule 247 (plow)


State 496

  246 plow: '\\' '-' INTEGER .

    $default  reduce using rule 246 (plow)


State 497

  248 plow: '\\' '-' INF .

    $default  reduce using rule 248 (plow)


State 498

  252 pup: ';' INTEGER . '\\'
  253    | ';' INTEGER . '/'

    '/'   shift, and go to state 549
    '\\'  shift, and go to state 550


State 499

  254 pup: ';' INF . '\\'
  255    | ';' INF . '/'

    '/'   shift, and go to state 551
    '\\'  shift, and go to state 552


State 500

  250 pup: ';' '-' . INTEGER '\\'
  251    | ';' '-' . INTEGER '/'

    INTEGER  shift, and go to state 553


State 501

  257 lower: '[' . INTEGER

    INTEGER  shift, and go to state 554


State 502

  170 edge: node node ATACS cons expr plow pup lower . upper rate weight

    ','  shift, and go to state 555

    $default  reduce using rule 258 (upper)

    upper  go to state 556


State 503

  171 edge: node node ATACS cons exprd plow pup lower . upper rate weight

    ','  shift, and go to state 555

    $default  reduce using rule 258 (upper)

    upper  go to state 557


State 504

  128 mark: '<' place '=' '[' INTEGER ',' INTEGER . ']' '>'

    ']'  shift, and go to state 558


State 505

  131 mark: '<' place '=' '[' INTEGER ',' INF . ']' '>'

    ']'  shift, and go to state 559


State 506

  125 mark: '<' place '=' '[' '-' INTEGER ',' . '-' INTEGER ']' '>'
  127     | '<' place '=' '[' '-' INTEGER ',' . INTEGER ']' '>'
  130     | '<' place '=' '[' '-' INTEGER ',' . INF ']' '>'

    INTEGER  shift, and go to state 560
    INF      shift, and go to state 561
    '-'      shift, and go to state 562


State 507

  124 mark: '<' place '=' '[' '-' INF ',' . '-' INTEGER ']' '>'
  126     | '<' place '=' '[' '-' INF ',' . INTEGER ']' '>'
  129     | '<' place '=' '[' '-' INF ',' . INF ']' '>'

    INTEGER  shift, and go to state 563
    INF      shift, and go to state 564
    '-'      shift, and go to state 565


State 508

   68 continuous: continuous ID '[' INTEGER ',' INTEGER ']' .

    $default  reduce using rule 68 (continuous)


State 509

   71 continuous: continuous ID '[' INTEGER ',' INF ']' .

    $default  reduce using rule 71 (continuous)


State 510

   67 continuous: continuous ID '[' '-' INTEGER ',' INTEGER . ']'

    ']'  shift, and go to state 566


State 511

   70 continuous: continuous ID '[' '-' INTEGER ',' INF . ']'

    ']'  shift, and go to state 567


State 512

   65 continuous: continuous ID '[' '-' INTEGER ',' '-' . INTEGER ']'

    INTEGER  shift, and go to state 568


State 513

   66 continuous: continuous ID '[' '-' INF ',' INTEGER . ']'

    ']'  shift, and go to state 569


State 514

   69 continuous: continuous ID '[' '-' INF ',' INF . ']'

    ']'  shift, and go to state 570


State 515

   64 continuous: continuous ID '[' '-' INF ',' '-' . INTEGER ']'

    INTEGER  shift, and go to state 571


State 516

  161 trate: '<' place '=' INTEGER '>' .

    $default  reduce using rule 161 (trate)


State 517

  162 trate: '<' place '=' '[' INTEGER . ',' INTEGER ']' '>'

    ','  shift, and go to state 572


State 518

   79 probprop: PG bound '(' . probproperty ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    Pr           shift, and go to state 101
    Ss           shift, and go to state 102
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    probproperty  go to state 573
    hsf           go to state 136
    andexpr       go to state 137
    relation      go to state 138
    arithexpr     go to state 139
    multexpr      go to state 140
    term          go to state 141
    unop          go to state 142
    binop         go to state 143


State 519

   80 probprop: PF bound '(' . probproperty ')'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    Pr           shift, and go to state 101
    Ss           shift, and go to state 102
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    probproperty  go to state 574
    hsf           go to state 136
    andexpr       go to state 137
    relation      go to state 138
    arithexpr     go to state 139
    multexpr      go to state 140
    term          go to state 141
    unop          go to state 142
    binop         go to state 143


State 520

   81 probprop: PX '(' probproperty . ')'

    ')'  shift, and go to state 575


State 521

   82 probprop: probproperty PU bound . probproperty

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    Pr           shift, and go to state 101
    Ss           shift, and go to state 102
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    probproperty  go to state 576
    hsf           go to state 136
    andexpr       go to state 137
    relation      go to state 138
    arithexpr     go to state 139
    multexpr      go to state 140
    term          go to state 141
    unop          go to state 142
    binop         go to state 143


State 522

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  236 hsf_ineqs: hsf .

    IMPLIC  shift, and go to state 222
    '|'     shift, and go to state 223

    $default  reduce using rule 236 (hsf_ineqs)


State 523

  166 invariant: '<' place '=' '[' hsf_ineqs . ']' '>'
  235 hsf_ineqs: hsf_ineqs . ';' hsf

    ']'  shift, and go to state 577
    ';'  shift, and go to state 578


State 524

  235 hsf_ineqs: hsf_ineqs . ';' hsf
  274 enable: '<' node '=' '[' hsf_ineqs . ']' '>'

    ']'  shift, and go to state 579
    ';'  shift, and go to state 578


State 525

  239 ineq: place . ASSIGN hsf

    ASSIGN  shift, and go to state 580


State 526

  233 ineqs: ineqs . ';' ineq
  278 assign: '<' node '=' '[' ineqs . ']' '>'

    ']'  shift, and go to state 581
    ';'  shift, and go to state 582


State 527

  234 ineqs: ineq .

    $default  reduce using rule 234 (ineqs)


State 528

  240 rate_ineq: place . ASSIGN hsf

    ASSIGN  shift, and go to state 583


State 529

  237 rate_ineqs: rate_ineqs . ';' rate_ineq
  282 rate_assign: '<' node '=' '[' rate_ineqs . ']' '>'

    ']'  shift, and go to state 584
    ';'  shift, and go to state 585


State 530

  238 rate_ineqs: rate_ineq .

    $default  reduce using rule 238 (rate_ineqs)


State 531

  291 delay_assign: '<' node '=' INTEGER '>' .

    $default  reduce using rule 291 (delay_assign)


State 532

  286 delay_assign: '<' node '=' UNIFORM '(' . INTEGER ',' INTEGER ')' '>'
  287             | '<' node '=' UNIFORM '(' . INTEGER ',' INF ')' '>'

    INTEGER  shift, and go to state 586


State 533

  288 delay_assign: '<' node '=' EXPONENTIAL '(' . hsf ')' '>'

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 587
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 534

  203 term: INTEGER .
  289 delay_assign: '<' node '=' '[' INTEGER . ',' INTEGER ']' '>'
  290             | '<' node '=' '[' INTEGER . ',' INF ']' '>'

    ','  shift, and go to state 588

    $default  reduce using rule 203 (term)


State 535

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  292 delay_assign: '<' node '=' '[' hsf . ']' '>'

    IMPLIC  shift, and go to state 222
    ']'     shift, and go to state 589
    '|'     shift, and go to state 223


State 536

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  296 priority_assign: '<' node '=' '[' hsf . ']' '>'

    IMPLIC  shift, and go to state 222
    ']'     shift, and go to state 590
    '|'     shift, and go to state 223


State 537

  307 bool_ineq: ID . ASSIGN hsf

    ASSIGN  shift, and go to state 591


State 538

  304 bool_assign: '<' node '=' '[' bool_ineqs . ']' '>'
  305 bool_ineqs: bool_ineqs . ';' bool_ineq

    ']'  shift, and go to state 592
    ';'  shift, and go to state 593


State 539

  306 bool_ineqs: bool_ineq .

    $default  reduce using rule 306 (bool_ineqs)


State 540

  135 init_rate: '<' variable '=' INTEGER '>' .

    $default  reduce using rule 135 (init_rate)


State 541

  136 init_rate: '<' variable '=' '-' INTEGER . '>'

    '>'  shift, and go to state 594


State 542

  141 init_rate: '<' variable '=' '[' INTEGER . ',' INTEGER ']' '>'
  144          | '<' variable '=' '[' INTEGER . ',' INF ']' '>'

    ','  shift, and go to state 595


State 543

  137 init_rate: '<' variable '=' '[' '-' . INF ',' '-' INTEGER ']' '>'
  138          | '<' variable '=' '[' '-' . INTEGER ',' '-' INTEGER ']' '>'
  139          | '<' variable '=' '[' '-' . INF ',' INTEGER ']' '>'
  140          | '<' variable '=' '[' '-' . INTEGER ',' INTEGER ']' '>'
  142          | '<' variable '=' '[' '-' . INF ',' INF ']' '>'
  143          | '<' variable '=' '[' '-' . INTEGER ':' INF ']' '>'

    INTEGER  shift, and go to state 596
    INF      shift, and go to state 597


State 544

  148 init_val: '<' variable '=' INTEGER '>' .

    $default  reduce using rule 148 (init_val)


State 545

  149 init_val: '<' variable '=' '-' INTEGER . '>'

    '>'  shift, and go to state 598


State 546

  154 init_val: '<' variable '=' '[' INTEGER . ',' INTEGER ']' '>'
  157         | '<' variable '=' '[' INTEGER . ',' INF ']' '>'

    ','  shift, and go to state 599


State 547

  150 init_val: '<' variable '=' '[' '-' . INF ',' '-' INTEGER ']' '>'
  151         | '<' variable '=' '[' '-' . INTEGER ',' '-' INTEGER ']' '>'
  152         | '<' variable '=' '[' '-' . INF ',' INTEGER ']' '>'
  153         | '<' variable '=' '[' '-' . INTEGER ',' INTEGER ']' '>'
  155         | '<' variable '=' '[' '-' . INF ',' INF ']' '>'
  156         | '<' variable '=' '[' '-' . INTEGER ',' INF ']' '>'

    INTEGER  shift, and go to state 600
    INF      shift, and go to state 601


State 548

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  300 transition_rate: '<' node '=' '[' hsf . ']' '>'

    IMPLIC  shift, and go to state 222
    ']'     shift, and go to state 602
    '|'     shift, and go to state 223


State 549

  253 pup: ';' INTEGER '/' .

    $default  reduce using rule 253 (pup)


State 550

  252 pup: ';' INTEGER '\\' .

    $default  reduce using rule 252 (pup)


State 551

  255 pup: ';' INF '/' .

    $default  reduce using rule 255 (pup)


State 552

  254 pup: ';' INF '\\' .

    $default  reduce using rule 254 (pup)


State 553

  250 pup: ';' '-' INTEGER . '\\'
  251    | ';' '-' INTEGER . '/'

    '/'   shift, and go to state 603
    '\\'  shift, and go to state 604


State 554

  257 lower: '[' INTEGER .

    $default  reduce using rule 257 (lower)


State 555

  259 upper: ',' . INTEGER ']'
  260      | ',' . INF ']'

    INTEGER  shift, and go to state 605
    INF      shift, and go to state 606


State 556

  170 edge: node node ATACS cons expr plow pup lower upper . rate weight

    REAL  shift, and go to state 607

    $default  reduce using rule 261 (rate)

    rate  go to state 608


State 557

  171 edge: node node ATACS cons exprd plow pup lower upper . rate weight

    REAL  shift, and go to state 607

    $default  reduce using rule 261 (rate)

    rate  go to state 609


State 558

  128 mark: '<' place '=' '[' INTEGER ',' INTEGER ']' . '>'

    '>'  shift, and go to state 610


State 559

  131 mark: '<' place '=' '[' INTEGER ',' INF ']' . '>'

    '>'  shift, and go to state 611


State 560

  127 mark: '<' place '=' '[' '-' INTEGER ',' INTEGER . ']' '>'

    ']'  shift, and go to state 612


State 561

  130 mark: '<' place '=' '[' '-' INTEGER ',' INF . ']' '>'

    ']'  shift, and go to state 613


State 562

  125 mark: '<' place '=' '[' '-' INTEGER ',' '-' . INTEGER ']' '>'

    INTEGER  shift, and go to state 614


State 563

  126 mark: '<' place '=' '[' '-' INF ',' INTEGER . ']' '>'

    ']'  shift, and go to state 615


State 564

  129 mark: '<' place '=' '[' '-' INF ',' INF . ']' '>'

    ']'  shift, and go to state 616


State 565

  124 mark: '<' place '=' '[' '-' INF ',' '-' . INTEGER ']' '>'

    INTEGER  shift, and go to state 617


State 566

   67 continuous: continuous ID '[' '-' INTEGER ',' INTEGER ']' .

    $default  reduce using rule 67 (continuous)


State 567

   70 continuous: continuous ID '[' '-' INTEGER ',' INF ']' .

    $default  reduce using rule 70 (continuous)


State 568

   65 continuous: continuous ID '[' '-' INTEGER ',' '-' INTEGER . ']'

    ']'  shift, and go to state 618


State 569

   66 continuous: continuous ID '[' '-' INF ',' INTEGER ']' .

    $default  reduce using rule 66 (continuous)


State 570

   69 continuous: continuous ID '[' '-' INF ',' INF ']' .

    $default  reduce using rule 69 (continuous)


State 571

   64 continuous: continuous ID '[' '-' INF ',' '-' INTEGER . ']'

    ']'  shift, and go to state 619


State 572

  162 trate: '<' place '=' '[' INTEGER ',' . INTEGER ']' '>'

    INTEGER  shift, and go to state 620


State 573

   79 probprop: PG bound '(' probproperty . ')'

    ')'  shift, and go to state 621


State 574

   80 probprop: PF bound '(' probproperty . ')'

    ')'  shift, and go to state 622


State 575

   81 probprop: PX '(' probproperty ')' .

    $default  reduce using rule 81 (probprop)


State 576

   82 probprop: probproperty PU bound probproperty .

    $default  reduce using rule 82 (probprop)


State 577

  166 invariant: '<' place '=' '[' hsf_ineqs ']' . '>'

    '>'  shift, and go to state 623


State 578

  235 hsf_ineqs: hsf_ineqs ';' . hsf

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 624
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 579

  274 enable: '<' node '=' '[' hsf_ineqs ']' . '>'

    '>'  shift, and go to state 625


State 580

  239 ineq: place ASSIGN . hsf

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 626
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 581

  278 assign: '<' node '=' '[' ineqs ']' . '>'

    '>'  shift, and go to state 627


State 582

  233 ineqs: ineqs ';' . ineq

    ID  shift, and go to state 68

    place  go to state 525
    ineq   go to state 628


State 583

  240 rate_ineq: place ASSIGN . hsf

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 629
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 584

  282 rate_assign: '<' node '=' '[' rate_ineqs ']' . '>'

    '>'  shift, and go to state 630


State 585

  237 rate_ineqs: rate_ineqs ';' . rate_ineq

    ID  shift, and go to state 68

    place      go to state 528
    rate_ineq  go to state 631


State 586

  286 delay_assign: '<' node '=' UNIFORM '(' INTEGER . ',' INTEGER ')' '>'
  287             | '<' node '=' UNIFORM '(' INTEGER . ',' INF ')' '>'

    ','  shift, and go to state 632


State 587

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  288 delay_assign: '<' node '=' EXPONENTIAL '(' hsf . ')' '>'

    IMPLIC  shift, and go to state 222
    ')'     shift, and go to state 633
    '|'     shift, and go to state 223


State 588

  289 delay_assign: '<' node '=' '[' INTEGER ',' . INTEGER ']' '>'
  290             | '<' node '=' '[' INTEGER ',' . INF ']' '>'

    INTEGER  shift, and go to state 634
    INF      shift, and go to state 635


State 589

  292 delay_assign: '<' node '=' '[' hsf ']' . '>'

    '>'  shift, and go to state 636


State 590

  296 priority_assign: '<' node '=' '[' hsf ']' . '>'

    '>'  shift, and go to state 637


State 591

  307 bool_ineq: ID ASSIGN . hsf

    IDIV         shift, and go to state 89
    MINF         shift, and go to state 90
    MAXF         shift, and go to state 91
    FLOOR        shift, and go to state 92
    CEIL         shift, and go to state 93
    ID           shift, and go to state 94
    INTEGER      shift, and go to state 95
    NOT          shift, and go to state 96
    REAL         shift, and go to state 97
    INF          shift, and go to state 98
    BOOL_FALSE   shift, and go to state 99
    BOOL_TRUE    shift, and go to state 100
    UNIFORM      shift, and go to state 107
    NORMAL       shift, and go to state 108
    EXPONENTIAL  shift, and go to state 109
    GAMMA        shift, and go to state 110
    LOGNORMAL    shift, and go to state 111
    CHISQ        shift, and go to state 112
    LAPLACE      shift, and go to state 113
    CAUCHY       shift, and go to state 114
    RAYLEIGH     shift, and go to state 115
    POISSON      shift, and go to state 116
    BINOMIAL     shift, and go to state 117
    BERNOULLI    shift, and go to state 118
    AND          shift, and go to state 119
    OR           shift, and go to state 120
    XOR          shift, and go to state 121
    INT          shift, and go to state 122
    BIT          shift, and go to state 123
    RATE         shift, and go to state 124
    BOOL         shift, and go to state 125
    '-'          shift, and go to state 127
    '('          shift, and go to state 128
    '~'          shift, and go to state 129

    hsf        go to state 638
    andexpr    go to state 137
    relation   go to state 138
    arithexpr  go to state 139
    multexpr   go to state 140
    term       go to state 141
    unop       go to state 142
    binop      go to state 143


State 592

  304 bool_assign: '<' node '=' '[' bool_ineqs ']' . '>'

    '>'  shift, and go to state 639


State 593

  305 bool_ineqs: bool_ineqs ';' . bool_ineq

    ID  shift, and go to state 537

    bool_ineq  go to state 640


State 594

  136 init_rate: '<' variable '=' '-' INTEGER '>' .

    $default  reduce using rule 136 (init_rate)


State 595

  141 init_rate: '<' variable '=' '[' INTEGER ',' . INTEGER ']' '>'
  144          | '<' variable '=' '[' INTEGER ',' . INF ']' '>'

    INTEGER  shift, and go to state 641
    INF      shift, and go to state 642


State 596

  138 init_rate: '<' variable '=' '[' '-' INTEGER . ',' '-' INTEGER ']' '>'
  140          | '<' variable '=' '[' '-' INTEGER . ',' INTEGER ']' '>'
  143          | '<' variable '=' '[' '-' INTEGER . ':' INF ']' '>'

    ','  shift, and go to state 643
    ':'  shift, and go to state 644


State 597

  137 init_rate: '<' variable '=' '[' '-' INF . ',' '-' INTEGER ']' '>'
  139          | '<' variable '=' '[' '-' INF . ',' INTEGER ']' '>'
  142          | '<' variable '=' '[' '-' INF . ',' INF ']' '>'

    ','  shift, and go to state 645


State 598

  149 init_val: '<' variable '=' '-' INTEGER '>' .

    $default  reduce using rule 149 (init_val)


State 599

  154 init_val: '<' variable '=' '[' INTEGER ',' . INTEGER ']' '>'
  157         | '<' variable '=' '[' INTEGER ',' . INF ']' '>'

    INTEGER  shift, and go to state 646
    INF      shift, and go to state 647


State 600

  151 init_val: '<' variable '=' '[' '-' INTEGER . ',' '-' INTEGER ']' '>'
  153         | '<' variable '=' '[' '-' INTEGER . ',' INTEGER ']' '>'
  156         | '<' variable '=' '[' '-' INTEGER . ',' INF ']' '>'

    ','  shift, and go to state 648


State 601

  150 init_val: '<' variable '=' '[' '-' INF . ',' '-' INTEGER ']' '>'
  152         | '<' variable '=' '[' '-' INF . ',' INTEGER ']' '>'
  155         | '<' variable '=' '[' '-' INF . ',' INF ']' '>'

    ','  shift, and go to state 649


State 602

  300 transition_rate: '<' node '=' '[' hsf ']' . '>'

    '>'  shift, and go to state 650


State 603

  251 pup: ';' '-' INTEGER '/' .

    $default  reduce using rule 251 (pup)


State 604

  250 pup: ';' '-' INTEGER '\\' .

    $default  reduce using rule 250 (pup)


State 605

  259 upper: ',' INTEGER . ']'

    ']'  shift, and go to state 651


State 606

  260 upper: ',' INF . ']'

    ']'  shift, and go to state 652


State 607

  262 rate: REAL .

    $default  reduce using rule 262 (rate)


State 608

  170 edge: node node ATACS cons expr plow pup lower upper rate . weight

    INTEGER  shift, and go to state 653

    $default  reduce using rule 263 (weight)

    weight  go to state 654


State 609

  171 edge: node node ATACS cons exprd plow pup lower upper rate . weight

    INTEGER  shift, and go to state 653

    $default  reduce using rule 263 (weight)

    weight  go to state 655


State 610

  128 mark: '<' place '=' '[' INTEGER ',' INTEGER ']' '>' .

    $default  reduce using rule 128 (mark)


State 611

  131 mark: '<' place '=' '[' INTEGER ',' INF ']' '>' .

    $default  reduce using rule 131 (mark)


State 612

  127 mark: '<' place '=' '[' '-' INTEGER ',' INTEGER ']' . '>'

    '>'  shift, and go to state 656


State 613

  130 mark: '<' place '=' '[' '-' INTEGER ',' INF ']' . '>'

    '>'  shift, and go to state 657


State 614

  125 mark: '<' place '=' '[' '-' INTEGER ',' '-' INTEGER . ']' '>'

    ']'  shift, and go to state 658


State 615

  126 mark: '<' place '=' '[' '-' INF ',' INTEGER ']' . '>'

    '>'  shift, and go to state 659


State 616

  129 mark: '<' place '=' '[' '-' INF ',' INF ']' . '>'

    '>'  shift, and go to state 660


State 617

  124 mark: '<' place '=' '[' '-' INF ',' '-' INTEGER . ']' '>'

    ']'  shift, and go to state 661


State 618

   65 continuous: continuous ID '[' '-' INTEGER ',' '-' INTEGER ']' .

    $default  reduce using rule 65 (continuous)


State 619

   64 continuous: continuous ID '[' '-' INF ',' '-' INTEGER ']' .

    $default  reduce using rule 64 (continuous)


State 620

  162 trate: '<' place '=' '[' INTEGER ',' INTEGER . ']' '>'

    ']'  shift, and go to state 662


State 621

   79 probprop: PG bound '(' probproperty ')' .

    $default  reduce using rule 79 (probprop)


State 622

   80 probprop: PF bound '(' probproperty ')' .

    $default  reduce using rule 80 (probprop)


State 623

  166 invariant: '<' place '=' '[' hsf_ineqs ']' '>' .

    $default  reduce using rule 166 (invariant)


State 624

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  235 hsf_ineqs: hsf_ineqs ';' hsf .

    IMPLIC  shift, and go to state 222
    '|'     shift, and go to state 223

    $default  reduce using rule 235 (hsf_ineqs)


State 625

  274 enable: '<' node '=' '[' hsf_ineqs ']' '>' .

    $default  reduce using rule 274 (enable)


State 626

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  239 ineq: place ASSIGN hsf .

    IMPLIC  shift, and go to state 222
    '|'     shift, and go to state 223

    $default  reduce using rule 239 (ineq)


State 627

  278 assign: '<' node '=' '[' ineqs ']' '>' .

    $default  reduce using rule 278 (assign)


State 628

  233 ineqs: ineqs ';' ineq .

    $default  reduce using rule 233 (ineqs)


State 629

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  240 rate_ineq: place ASSIGN hsf .

    IMPLIC  shift, and go to state 222
    '|'     shift, and go to state 223

    $default  reduce using rule 240 (rate_ineq)


State 630

  282 rate_assign: '<' node '=' '[' rate_ineqs ']' '>' .

    $default  reduce using rule 282 (rate_assign)


State 631

  237 rate_ineqs: rate_ineqs ';' rate_ineq .

    $default  reduce using rule 237 (rate_ineqs)


State 632

  286 delay_assign: '<' node '=' UNIFORM '(' INTEGER ',' . INTEGER ')' '>'
  287             | '<' node '=' UNIFORM '(' INTEGER ',' . INF ')' '>'

    INTEGER  shift, and go to state 663
    INF      shift, and go to state 664


State 633

  288 delay_assign: '<' node '=' EXPONENTIAL '(' hsf ')' . '>'

    '>'  shift, and go to state 665


State 634

  289 delay_assign: '<' node '=' '[' INTEGER ',' INTEGER . ']' '>'

    ']'  shift, and go to state 666


State 635

  290 delay_assign: '<' node '=' '[' INTEGER ',' INF . ']' '>'

    ']'  shift, and go to state 667


State 636

  292 delay_assign: '<' node '=' '[' hsf ']' '>' .

    $default  reduce using rule 292 (delay_assign)


State 637

  296 priority_assign: '<' node '=' '[' hsf ']' '>' .

    $default  reduce using rule 296 (priority_assign)


State 638

  176 hsf: hsf . '|' andexpr
  177    | hsf . IMPLIC andexpr
  307 bool_ineq: ID ASSIGN hsf .

    IMPLIC  shift, and go to state 222
    '|'     shift, and go to state 223

    $default  reduce using rule 307 (bool_ineq)


State 639

  304 bool_assign: '<' node '=' '[' bool_ineqs ']' '>' .

    $default  reduce using rule 304 (bool_assign)


State 640

  305 bool_ineqs: bool_ineqs ';' bool_ineq .

    $default  reduce using rule 305 (bool_ineqs)


State 641

  141 init_rate: '<' variable '=' '[' INTEGER ',' INTEGER . ']' '>'

    ']'  shift, and go to state 668


State 642

  144 init_rate: '<' variable '=' '[' INTEGER ',' INF . ']' '>'

    ']'  shift, and go to state 669


State 643

  138 init_rate: '<' variable '=' '[' '-' INTEGER ',' . '-' INTEGER ']' '>'
  140          | '<' variable '=' '[' '-' INTEGER ',' . INTEGER ']' '>'

    INTEGER  shift, and go to state 670
    '-'      shift, and go to state 671


State 644

  143 init_rate: '<' variable '=' '[' '-' INTEGER ':' . INF ']' '>'

    INF  shift, and go to state 672


State 645

  137 init_rate: '<' variable '=' '[' '-' INF ',' . '-' INTEGER ']' '>'
  139          | '<' variable '=' '[' '-' INF ',' . INTEGER ']' '>'
  142          | '<' variable '=' '[' '-' INF ',' . INF ']' '>'

    INTEGER  shift, and go to state 673
    INF      shift, and go to state 674
    '-'      shift, and go to state 675


State 646

  154 init_val: '<' variable '=' '[' INTEGER ',' INTEGER . ']' '>'

    ']'  shift, and go to state 676


State 647

  157 init_val: '<' variable '=' '[' INTEGER ',' INF . ']' '>'

    ']'  shift, and go to state 677


State 648

  151 init_val: '<' variable '=' '[' '-' INTEGER ',' . '-' INTEGER ']' '>'
  153         | '<' variable '=' '[' '-' INTEGER ',' . INTEGER ']' '>'
  156         | '<' variable '=' '[' '-' INTEGER ',' . INF ']' '>'

    INTEGER  shift, and go to state 678
    INF      shift, and go to state 679
    '-'      shift, and go to state 680


State 649

  150 init_val: '<' variable '=' '[' '-' INF ',' . '-' INTEGER ']' '>'
  152         | '<' variable '=' '[' '-' INF ',' . INTEGER ']' '>'
  155         | '<' variable '=' '[' '-' INF ',' . INF ']' '>'

    INTEGER  shift, and go to state 681
    INF      shift, and go to state 682
    '-'      shift, and go to state 683


State 650

  300 transition_rate: '<' node '=' '[' hsf ']' '>' .

    $default  reduce using rule 300 (transition_rate)


State 651

  259 upper: ',' INTEGER ']' .

    $default  reduce using rule 259 (upper)


State 652

  260 upper: ',' INF ']' .

    $default  reduce using rule 260 (upper)


State 653

  264 weight: INTEGER .

    $default  reduce using rule 264 (weight)


State 654

  170 edge: node node ATACS cons expr plow pup lower upper rate weight .

    $default  reduce using rule 170 (edge)


State 655

  171 edge: node node ATACS cons exprd plow pup lower upper rate weight .

    $default  reduce using rule 171 (edge)


State 656

  127 mark: '<' place '=' '[' '-' INTEGER ',' INTEGER ']' '>' .

    $default  reduce using rule 127 (mark)


State 657

  130 mark: '<' place '=' '[' '-' INTEGER ',' INF ']' '>' .

    $default  reduce using rule 130 (mark)


State 658

  125 mark: '<' place '=' '[' '-' INTEGER ',' '-' INTEGER ']' . '>'

    '>'  shift, and go to state 684


State 659

  126 mark: '<' place '=' '[' '-' INF ',' INTEGER ']' '>' .

    $default  reduce using rule 126 (mark)


State 660

  129 mark: '<' place '=' '[' '-' INF ',' INF ']' '>' .

    $default  reduce using rule 129 (mark)


State 661

  124 mark: '<' place '=' '[' '-' INF ',' '-' INTEGER ']' . '>'

    '>'  shift, and go to state 685


State 662

  162 trate: '<' place '=' '[' INTEGER ',' INTEGER ']' . '>'

    '>'  shift, and go to state 686


State 663

  286 delay_assign: '<' node '=' UNIFORM '(' INTEGER ',' INTEGER . ')' '>'

    ')'  shift, and go to state 687


State 664

  287 delay_assign: '<' node '=' UNIFORM '(' INTEGER ',' INF . ')' '>'

    ')'  shift, and go to state 688


State 665

  288 delay_assign: '<' node '=' EXPONENTIAL '(' hsf ')' '>' .

    $default  reduce using rule 288 (delay_assign)


State 666

  289 delay_assign: '<' node '=' '[' INTEGER ',' INTEGER ']' . '>'

    '>'  shift, and go to state 689


State 667

  290 delay_assign: '<' node '=' '[' INTEGER ',' INF ']' . '>'

    '>'  shift, and go to state 690


State 668

  141 init_rate: '<' variable '=' '[' INTEGER ',' INTEGER ']' . '>'

    '>'  shift, and go to state 691


State 669

  144 init_rate: '<' variable '=' '[' INTEGER ',' INF ']' . '>'

    '>'  shift, and go to state 692


State 670

  140 init_rate: '<' variable '=' '[' '-' INTEGER ',' INTEGER . ']' '>'

    ']'  shift, and go to state 693


State 671

  138 init_rate: '<' variable '=' '[' '-' INTEGER ',' '-' . INTEGER ']' '>'

    INTEGER  shift, and go to state 694


State 672

  143 init_rate: '<' variable '=' '[' '-' INTEGER ':' INF . ']' '>'

    ']'  shift, and go to state 695


State 673

  139 init_rate: '<' variable '=' '[' '-' INF ',' INTEGER . ']' '>'

    ']'  shift, and go to state 696


State 674

  142 init_rate: '<' variable '=' '[' '-' INF ',' INF . ']' '>'

    ']'  shift, and go to state 697


State 675

  137 init_rate: '<' variable '=' '[' '-' INF ',' '-' . INTEGER ']' '>'

    INTEGER  shift, and go to state 698


State 676

  154 init_val: '<' variable '=' '[' INTEGER ',' INTEGER ']' . '>'

    '>'  shift, and go to state 699


State 677

  157 init_val: '<' variable '=' '[' INTEGER ',' INF ']' . '>'

    '>'  shift, and go to state 700


State 678

  153 init_val: '<' variable '=' '[' '-' INTEGER ',' INTEGER . ']' '>'

    ']'  shift, and go to state 701


State 679

  156 init_val: '<' variable '=' '[' '-' INTEGER ',' INF . ']' '>'

    ']'  shift, and go to state 702


State 680

  151 init_val: '<' variable '=' '[' '-' INTEGER ',' '-' . INTEGER ']' '>'

    INTEGER  shift, and go to state 703


State 681

  152 init_val: '<' variable '=' '[' '-' INF ',' INTEGER . ']' '>'

    ']'  shift, and go to state 704


State 682

  155 init_val: '<' variable '=' '[' '-' INF ',' INF . ']' '>'

    ']'  shift, and go to state 705


State 683

  150 init_val: '<' variable '=' '[' '-' INF ',' '-' . INTEGER ']' '>'

    INTEGER  shift, and go to state 706


State 684

  125 mark: '<' place '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>' .

    $default  reduce using rule 125 (mark)


State 685

  124 mark: '<' place '=' '[' '-' INF ',' '-' INTEGER ']' '>' .

    $default  reduce using rule 124 (mark)


State 686

  162 trate: '<' place '=' '[' INTEGER ',' INTEGER ']' '>' .

    $default  reduce using rule 162 (trate)


State 687

  286 delay_assign: '<' node '=' UNIFORM '(' INTEGER ',' INTEGER ')' . '>'

    '>'  shift, and go to state 707


State 688

  287 delay_assign: '<' node '=' UNIFORM '(' INTEGER ',' INF ')' . '>'

    '>'  shift, and go to state 708


State 689

  289 delay_assign: '<' node '=' '[' INTEGER ',' INTEGER ']' '>' .

    $default  reduce using rule 289 (delay_assign)


State 690

  290 delay_assign: '<' node '=' '[' INTEGER ',' INF ']' '>' .

    $default  reduce using rule 290 (delay_assign)


State 691

  141 init_rate: '<' variable '=' '[' INTEGER ',' INTEGER ']' '>' .

    $default  reduce using rule 141 (init_rate)


State 692

  144 init_rate: '<' variable '=' '[' INTEGER ',' INF ']' '>' .

    $default  reduce using rule 144 (init_rate)


State 693

  140 init_rate: '<' variable '=' '[' '-' INTEGER ',' INTEGER ']' . '>'

    '>'  shift, and go to state 709


State 694

  138 init_rate: '<' variable '=' '[' '-' INTEGER ',' '-' INTEGER . ']' '>'

    ']'  shift, and go to state 710


State 695

  143 init_rate: '<' variable '=' '[' '-' INTEGER ':' INF ']' . '>'

    '>'  shift, and go to state 711


State 696

  139 init_rate: '<' variable '=' '[' '-' INF ',' INTEGER ']' . '>'

    '>'  shift, and go to state 712


State 697

  142 init_rate: '<' variable '=' '[' '-' INF ',' INF ']' . '>'

    '>'  shift, and go to state 713


State 698

  137 init_rate: '<' variable '=' '[' '-' INF ',' '-' INTEGER . ']' '>'

    ']'  shift, and go to state 714


State 699

  154 init_val: '<' variable '=' '[' INTEGER ',' INTEGER ']' '>' .

    $default  reduce using rule 154 (init_val)


State 700

  157 init_val: '<' variable '=' '[' INTEGER ',' INF ']' '>' .

    $default  reduce using rule 157 (init_val)


State 701

  153 init_val: '<' variable '=' '[' '-' INTEGER ',' INTEGER ']' . '>'

    '>'  shift, and go to state 715


State 702

  156 init_val: '<' variable '=' '[' '-' INTEGER ',' INF ']' . '>'

    '>'  shift, and go to state 716


State 703

  151 init_val: '<' variable '=' '[' '-' INTEGER ',' '-' INTEGER . ']' '>'

    ']'  shift, and go to state 717


State 704

  152 init_val: '<' variable '=' '[' '-' INF ',' INTEGER ']' . '>'

    '>'  shift, and go to state 718


State 705

  155 init_val: '<' variable '=' '[' '-' INF ',' INF ']' . '>'

    '>'  shift, and go to state 719


State 706

  150 init_val: '<' variable '=' '[' '-' INF ',' '-' INTEGER . ']' '>'

    ']'  shift, and go to state 720


State 707

  286 delay_assign: '<' node '=' UNIFORM '(' INTEGER ',' INTEGER ')' '>' .

    $default  reduce using rule 286 (delay_assign)


State 708

  287 delay_assign: '<' node '=' UNIFORM '(' INTEGER ',' INF ')' '>' .

    $default  reduce using rule 287 (delay_assign)


State 709

  140 init_rate: '<' variable '=' '[' '-' INTEGER ',' INTEGER ']' '>' .

    $default  reduce using rule 140 (init_rate)


State 710

  138 init_rate: '<' variable '=' '[' '-' INTEGER ',' '-' INTEGER ']' . '>'

    '>'  shift, and go to state 721


State 711

  143 init_rate: '<' variable '=' '[' '-' INTEGER ':' INF ']' '>' .

    $default  reduce using rule 143 (init_rate)


State 712

  139 init_rate: '<' variable '=' '[' '-' INF ',' INTEGER ']' '>' .

    $default  reduce using rule 139 (init_rate)


State 713

  142 init_rate: '<' variable '=' '[' '-' INF ',' INF ']' '>' .

    $default  reduce using rule 142 (init_rate)


State 714

  137 init_rate: '<' variable '=' '[' '-' INF ',' '-' INTEGER ']' . '>'

    '>'  shift, and go to state 722


State 715

  153 init_val: '<' variable '=' '[' '-' INTEGER ',' INTEGER ']' '>' .

    $default  reduce using rule 153 (init_val)


State 716

  156 init_val: '<' variable '=' '[' '-' INTEGER ',' INF ']' '>' .

    $default  reduce using rule 156 (init_val)


State 717

  151 init_val: '<' variable '=' '[' '-' INTEGER ',' '-' INTEGER ']' . '>'

    '>'  shift, and go to state 723


State 718

  152 init_val: '<' variable '=' '[' '-' INF ',' INTEGER ']' '>' .

    $default  reduce using rule 152 (init_val)


State 719

  155 init_val: '<' variable '=' '[' '-' INF ',' INF ']' '>' .

    $default  reduce using rule 155 (init_val)


State 720

  150 init_val: '<' variable '=' '[' '-' INF ',' '-' INTEGER ']' . '>'

    '>'  shift, and go to state 724


State 721

  138 init_rate: '<' variable '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>' .

    $default  reduce using rule 138 (init_rate)


State 722

  137 init_rate: '<' variable '=' '[' '-' INF ',' '-' INTEGER ']' '>' .

    $default  reduce using rule 137 (init_rate)


State 723

  151 init_val: '<' variable '=' '[' '-' INTEGER ',' '-' INTEGER ']' '>' .

    $default  reduce using rule 151 (init_val)


State 724

  150 init_val: '<' variable '=' '[' '-' INF ',' '-' INTEGER ']' '>' .

    $default  reduce using rule 150 (init_val)
