# alloc-outbound
# HP controller, by K. Stevens
# Meat state encoding
.inputs req ackctl ackbus nakbus
.outputs ack busctl reqbus y1_allocoutbound y0_allocoutbound
#@.init_state [000000000]
.graph
# 0
req+/1 busctl+/1 #@[0,10]
# -> 1
busctl+/1 p1
p1 ackctl+/1 #@[20,50]

# 1 
ackctl+/1 reqbus+/1 #@[0,10]
# -> 2
reqbus+/1 p2
p2 ackbus+/1 #@[20,50]
p2 nakbus+/1 #@[20,50]

# 2
ackbus+/1 y1_allocoutbound+/1 #@[0,10]
y1_allocoutbound+/1 reqbus-/1 #@[0,10]

nakbus+/1 y0_allocoutbound+/1 #@[0,10]
y0_allocoutbound+/1 reqbus-/2 #@[0,10]
# -> 3
reqbus-/1 ackbus-/1 #@[20,50]
# -> 5
reqbus-/2 nakbus-/1 #@[20,50]

# 3
ackbus-/1 busctl-/1 #@[0,10]
# -> 4
busctl-/1 ackctl-/1 #@[20,50]

# 4
ackctl-/1 ack+/1 #@[0,10]
# -> 7
ack+/1 req-/1 #@[20,50]

# 7
req-/1 y1_allocoutbound-/1 #@[0,10]
y1_allocoutbound-/1 ack-/1 #@[0,10]
# -> 0
ack-/1 req+/1 #@[20,50]

# 5
nakbus-/1 busctl-/2 #@[0,10]
# -> 6
busctl-/2 ackctl-/2 #@[20,50]

# 6
ackctl-/2 y0_allocoutbound-/1 #@[0,10]
y0_allocoutbound-/1 busctl+/2 #@[0,10]
# -> 1
busctl+/2 p1

.marking { <ack-/1,req+/1> }
.end
