# sbuf-send-pkt2
# HP controller, by K. Stevens
# One-hot encoding (even meat needs 3 state vars...)
#.inputs req rejpkt ackline done 
#.outputs ack sendline y2 y1 y0
.inputs req rejpkt ackline done 
.outputs ack sendline y2 y1 y0 
#@.init_state [100001000]
.graph
# 0
place_0 rejpkt+/1 req+/1
rejpkt+/1 y2+/1

req+/1 sendline+/1
# -> 6
# -> 1
# not quite correct, but the closest SAFE approximation...
sendline+/1 place_1_0
place_1_0 ackline+/1 rejpkt+/2

# 1
rejpkt+/2 y0+/1
y0+/1 sendline-/1

ackline+/1 y1+/1
y1+/1 sendline-/2
sendline-/2 place_1_1
place_1_1 ackline-/1 done+

done+ ack+/1
# -> 2
sendline-/1 rejpkt-/2
# -> 4
ack+/1 req-/2 ackline-/2 done-
# -> 5

# 2
rejpkt-/2 ack+/2
# -> 3
ack+/2 req-/1

# 3
req-/1 ack-/1
ack-/1 y0-/1

# -> 0
y0-/1 place_0

# 4
req-/2 y1-/2
ackline-/2 y1-/2
done- y1-/2
y1-/2 ack-/2
# -> 0
ack-/2 place_0

# 5
ackline-/1 sendline+/2
sendline+/2 y1-/1
# -> 1
y1-/1 place_1_0

# 6
y2+/1 rejpkt-/1
# -> 0
rejpkt-/1 y2-/1
y2-/1 place_0 

.marking { place_1_0 }
.end
