; s# a+ <=> <s+> a+ means if s = 1 when a+ fires
; s~ a+ <=> <s-> a+ means if s = 0 when a+ fires
; s must be set up before the a+ transition.

;name two_ticks_if
;reset RXResetReq

input ITEventReq        0
input ITEvent2Ticks     0
input ITEventStop       0
input ITSoftResetReq    1

output IntEventReq      0
output TwoTicksResetAck 1

; vn2 of this SM.  Remove state 6 from vn1, merging ITEventReq- and 
; ITEvent2Ticks- into one burst.  These two input transitions follow
; each other fast, so having a state transition between them was 
; hazardous.

; vn1 of this SM.  Can we make ITSoftResetReq+ and ITEventReq- sequential
; instead of concurrent?  This would avoid needing ITEventStop to keep
; the exits from state 2 from violating the subset condition.

; Body of spec
; State Next Input-burst    | (Output-burst)

0   1   ITSoftResetReq-         |   TwoTicksResetAck-
1   2   ITEventReq+             |   IntEventReq+
2   3   ITEventStop+            |   
3   4   ITEventReq-             |   IntEventReq-
4   1   ITEventStop-            |   
2	0	ITSoftResetReq+ ITEventReq-		| IntEventReq- TwoTicksResetAck+
2	5	ITEvent2Ticks+			|
5	6	ITEventReq-	ITEvent2Ticks-	|
6	2	ITEventReq+				|
6	0	ITSoftResetReq+			|	IntEventReq- TwoTicksResetAck+

