module alu1;

/* Initial */
/*
delay gatedelay = <8,12>;
delay predelay = <16,24>;
delay aludelay = <24,36;16,24>;
delay muldelay = <48,72;16,24>;
delay startdelay = <8,12>;
*/

delay gatedelay = <8,12>;
delay predelay = <16,24>;
delay aludelay = <48,72;16,24>;
delay muldelay = <48,72;16,24>;
delay startdelay = <20,24>;

input start = {startdelay}; 
output A1M = {aludelay};
input M1A = {muldelay};
input a1done = {aludelay};
output a1prech = {true,gatedelay};
input heads = {<0,100>};
input tails = {<90,100>};

process alu1;
    *[ [start+]; a1prech-; [a1done+]; (a1prech+ || A1M+); 
	[ M1A+ & a1done- -> a1prech-; [a1done+]; (a1prech+ || A1M-);  
	    [M1A- & a1done-]; a1prech-; [a1done+]; 
	    (a1prech+ || A1M+); *  
	| start- & a1done- -> A1M-
	]
     ]
endprocess	

process aluenv;
    *[ start+; [a1prech-]; a1done+; [a1prech+ & A1M+]; 
	[ skip -> (M1A+ || a1done-); /*[heads-]; */[a1prech-]; a1done+; 
            [a1prech+ & A1M-]; 
	    (M1A- || a1done-); [a1prech-]; a1done+; [a1prech+ & A1M+]; *  
	| skip -> (start- || <20,24>a1done-); /*[tails-];*/ [A1M-]
	]
     ]
endprocess	
/*
process alu1;
    *[ [start+]; [A1M+]; 
	[ skip -> heads+; [M1A+]; heads-; [A1M-]; *
	| skip -> tails+; [start-]; tails-; [A1M-]
	]
     ]
endprocess	
*/
endmodule
