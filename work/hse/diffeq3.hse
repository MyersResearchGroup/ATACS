module diffeq;

/* Initial */

delay gatedelay = <1,1>;
delay predelay = <1,1>;
delay aludelay = <1,3;2,2>;
delay muldelay = <6,7;2,2>;
delay startdelay = <3,4>;
delay a1mdelay = <1,1>;
delay a2mdelay = <1,1>;
delay m1adelay = <1,1>;
delay m2a2delay = <1,1>;


/* Back annotated */
/*
delay gatedelay = <0,0>;
delay predelay = <0,0>;
delay aludelay = <2,5;3,3>;
delay muldelay = <9,9;6,6>;
delay startdelay = <1,2>;
delay a1mdelay = <2,2>;
delay a2mdelay = <1,1>;
delay m1adelay = <1,1>;
delay m2a2delay = <1,1>;
*/

input a1done = {aludelay};
output a1prech = {true,predelay};

input a2done = {aludelay};
output a2prech = {true,predelay};

input m1done = {muldelay};
output m1prech = {true,predelay};

input m2done = {muldelay};
output m2prech = {true,predelay};

input start = {startdelay}; 
output EndP = {gatedelay};
output A1M = {a1mdelay};
output A2M = {a2mdelay};
output M1A = {m1adelay};
output M2A2 = {m2a2delay};
output done = {gatedelay};
input C = {<0,0>};

process alu1;
    *[ [start]; a1prech-; [a1done]; (a1prech+ || A1M+);   
	[ M1A & ~a1done -> a1prech-; [a1done]; (a1prech+ || A1M-);  
	    [~M1A & ~a1done]; a1prech-; [a1done]; (a1prech+ || A1M+); *  
	| ~start & ~a1done -> A1M-
	]
     ]
endprocess	

process alu2;
    *[ [start]; a2prech-; 

	[ ~C -> [ true -> C+ | true -> skip ]
        |  C -> [ true -> C- | true -> skip ]
        ];

	[ a2done & ~C -> (A2M+ || a2prech+); [~a2done]; a2prech-; 
	    [a2done]; a2prech+; [M2A2 & M1A & ~a2done]; 
            (A2M- || a2prech-);

	    [ ~C -> [ true -> C+ | true -> skip ]
	    |  C -> [ true -> C- | true -> skip ]
	    ];

	    [ a2done & ~C -> a2prech+; [~a2done]; a2prech-; 
		[~M2A2 & ~M1A & a2done]; (a2prech+ || A2M+); [~a2done];
		a2prech-; [a2done]; a2prech+; [M2A2 & M1A & ~a2done]; 
		(A2M- || a2prech-); *
	    | a2done & C -> a2prech+; [~a2done]; a2prech-; 
		[~M2A2 & ~M1A & a2done]; a2prech+; [~a2done]; EndP+
	    ]
        | a2done & C -> a2prech+; [~a2done]; EndP+
	]; [~start]; EndP-
     ]
endprocess

process mul1;
    *[ [A1M & A2M & ~m1done]; m1prech-; [m1done]; (M1A+ || m1prech+ );  
	[~A1M & ~m1done]; m1prech-; [~A2M & m1done]; (M1A- || m1prech+) ]
endprocess

process mul2;
    *[ [A1M & A2M]; m2prech-; [m2done]; (M2A2+ || m2prech+); 
	[~A1M & ~A2M & ~m2done]; M2A2- ]
endprocess

process celem;
    *[ [EndP & A1M]; done+; [~EndP & ~A1M]; done- ]
endprocess

process env;
    *[ start+; [done]; start-; [~done] ]
endprocess

process a1;
    *[ [~a1prech]; a1done+; [a1prech]; a1done- ]
endprocess

process a2;
    *[ [~a2prech]; a2done+; [a2prech]; a2done- ]
endprocess

process m1;
    *[ [~m1prech]; m1done+; [m1prech]; m1done- ]
endprocess

process m2;
    *[ [~m2prech]; m2done+; [m2prech]; m2done- ]
endprocess
endmodule
