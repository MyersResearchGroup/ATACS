/*****************************************************************************/
/* Chu's SCSI Protocol Controller (with state variable added by hand)        */
/*****************************************************************************/
module scsi;

delay gatedelay = <0,5>;
delay envdelay = <20,50>;

input ack = {true,envdelay};
input go = {false,envdelay};
output req = {true,gatedelay};
output rdy = {false,gatedelay};
output q = {true,gatedelay};

process scsi2;
*[ req-; rdy+; q-; [go+]; rdy-; [ack-]; req+; [go-]; q+; [ack+] ]  
endprocess

process ack;
*[ [req-]; ack-; [req+]; ack+ ]
endprocess

process go;
*[ [rdy+]; go+; [rdy-]; go- ]
endprocess

endmodule

module main;

input ack = {true,<20,50>};
input go = {false,<20,50>};

scsi scsi1(req => req1, ack => ack, go => go, rdy => rdy1);
scsi scsi2(req => req2, ack => ack, go => go, rdy => rdy2);
scsi scsi3(req => req3, ack => ack, go => go, rdy => rdy3);
scsi scsi4(req => req4, ack => ack, go => go, rdy => rdy4);
scsi scsi5(req => req5, ack => ack, go => go, rdy => rdy5);
scsi scsi6(req => req6, ack => ack, go => go, rdy => rdy6);
scsi scsi7(req => req7, ack => ack, go => go, rdy => rdy7);
scsi scsi8(req => req8, ack => ack, go => go, rdy => rdy8);
scsi scsi9(req => req9, ack => ack, go => go, rdy => rdy9);
scsi scsi10(req => req10, ack => ack, go => go, rdy => rdy10);
scsi scsi11(req => req11, ack => ack, go => go, rdy => rdy11);
scsi scsi12(req => req12, ack => ack, go => go, rdy => rdy12);
scsi scsi13(req => req13, ack => ack, go => go, rdy => rdy13);
scsi scsi14(req => req14, ack => ack, go => go, rdy => rdy14);
scsi scsi15(req => req15, ack => ack, go => go, rdy => rdy15);
scsi scsi16(req => req16, ack => ack, go => go, rdy => rdy16);
scsi scsi17(req => req17, ack => ack, go => go, rdy => rdy17);
scsi scsi18(req => req18, ack => ack, go => go, rdy => rdy18);
scsi scsi19(req => req19, ack => ack, go => go, rdy => rdy19);
scsi scsi20(req => req20, ack => ack, go => go, rdy => rdy20);
scsi scsi21(req => req21, ack => ack, go => go, rdy => rdy21);
scsi scsi22(req => req22, ack => ack, go => go, rdy => rdy22);
scsi scsi23(req => req23, ack => ack, go => go, rdy => rdy23);
scsi scsi24(req => req24, ack => ack, go => go, rdy => rdy24);
scsi scsi25(req => req25, ack => ack, go => go, rdy => rdy25);
scsi scsi26(req => req26, ack => ack, go => go, rdy => rdy26);
scsi scsi27(req => req27, ack => ack, go => go, rdy => rdy27);
scsi scsi28(req => req28, ack => ack, go => go, rdy => rdy28);
scsi scsi29(req => req29, ack => ack, go => go, rdy => rdy29);
scsi scsi30(req => req30, ack => ack, go => go, rdy => rdy30);
scsi scsi31(req => req31, ack => ack, go => go, rdy => rdy31);
scsi scsi32(req => req32, ack => ack, go => go, rdy => rdy32);

process left;
*[ 
[req1- & req2- & req3- & req4- & req5- & req6- & req7- & req8- & req9- & 
req10- & req11- & req12- & req13- & req14- & req15- & req16- & req17- & req18- & req19- & 
req20- & req21- & req22- & req23- & req24- & req25- & req26- & req27- & req28- & req29- & 
req30- & req31- & req32-
]; 
   ack-; 
[req1+ & req2+ & req3+ & req4+ & req5+ & req6+ & req7+ & req8+ & req9+ & 
req10+ & req11+ & req12+ & req13+ & req14+ & req15+ & req16+ & req17+ & req18+ & req19+ & 
req20+ & req21+ & req22+ & req23+ & req24+ & req25+ & req26+ & req27+ & req28+ & req29+ & 
req30+ & req31+ & req32+
]; 
   ack+ ]
endprocess

process right;
*[ 
[rdy1+ & rdy2+ & rdy3+ & rdy4+ & rdy5+ & rdy6+ & rdy7+ & rdy8+ & rdy9+ & 
rdy10+ & rdy11+ & rdy12+ & rdy13+ & rdy14+ & rdy15+ & rdy16+ & rdy17+ & rdy18+ & rdy19+ & 
rdy20+ & rdy21+ & rdy22+ & rdy23+ & rdy24+ & rdy25+ & rdy26+ & rdy27+ & rdy28+ & rdy29+ & 
rdy30+ & rdy31+ & rdy32+
]; 
   go+; 
[rdy1- & rdy2- & rdy3- & rdy4- & rdy5- & rdy6- & rdy7- & rdy8- & rdy9- & 
rdy10- & rdy11- & rdy12- & rdy13- & rdy14- & rdy15- & rdy16- & rdy17- & rdy18- & rdy19- & 
rdy20- & rdy21- & rdy22- & rdy23- & rdy24- & rdy25- & rdy26- & rdy27- & rdy28- & rdy29- & 
rdy30- & rdy31- & rdy32-
]; 
   go-]
endprocess
endmodule
