/*****************************************************************************/
/* Furber's enhanced dynamic pipeline latch controller (better delay numbers)*/
/*****************************************************************************/
module elatch;

/* 
Optimizes this circuit to death using their SPICE timings +/- 0%

input	Rin	= {false,<180,180; 90,100>};
input	Aout	= {false,<80,80; 80,80>};
input	D	= {false,<580,580; 90,90>};
output	Ain	= {false,<0,1; 0,1>};
output	Rout	= {false,<0,1; 0,1>};
output	E	= {false,<80,80; 80,80>};
output	A	= {false,<110,110; 90,100>};
output	Lt	= {false,<70,70; 70,70>};

Optimizes this circuit to death using their SPICE timings +/- 10%

input	Rin	= {false,<162,198; 90,100>};
input	Aout	= {false,<72,88; 72,88>};
input	D	= {false,<522,638; 81,99>};
output	Ain	= {false,<0,1; 0,1>};
output	Rout	= {false,<0,1; 0,1>};
output	E	= {false,<72,88; 72,88>};
output	A	= {false,<99,121; 90,100>};
output	Lt	= {false,<63,77; 63,77>};

 Optimizes this circuit to death using their SPICE timings +/- 20%

input	Rin	= {false,<144,216; 80,110>};
input	Aout	= {false,<64,96; 64,96>};
input	D	= {false,<464,696; 72,108>};
output	Ain	= {false,<0,1; 0,1>};
output	Rout	= {false,<0,1; 0,1>};
output	E	= {false,<64,96; 64,96>};
output	A	= {false,<88,132; 80,110>};
output	Lt	= {false,<56,84; 56,84>};

 Optimizes this circuit to death using their SPICE timings +/- 30% 

input	Rin	= {false,<126,234; 70,120>};
input	Aout	= {false,<56,104; 56,104>};
input	D	= {false,<406,752; 63,117>};
output	Ain	= {false,<0,1; 0,1>};
output	Rout	= {false,<0,1; 0,1>};
output	E	= {false,<56,104; 56,104>};
output	A	= {false,<77,143; 70,120>};
output	Lt	= {false,<49,91; 49,91>};

 Optimizes this circuit to death using their SPICE timings +/- 50% 

input	Rin	= {false,<90,270; 45,150>};
input	Aout	= {false,<40,120; 40,120>};
input	D	= {false,<290,870; 45,135>};
output	Ain	= {false,<0,1; 0,1>};
output	Rout	= {false,<0,1; 0,1>};
output	E	= {false,<40,120; 40,120>};
output	A	= {false,<55,165; 45,150>};
output	Lt	= {false,<35,105; 35,105>};
*/
input	Rin	= {false,<144,896; 144,607>};
input	Aout	= {false,<64,191; 337,907>};
input	D	= {false,<464,696; 72,108>};
output	Ain	= {false,<0,1; 0,1>};
output	Rout	= {false,<0,1; 0,1>};
output	E	= {false,<64,96; 64,96>};
output	A	= {false,<88,132; 80,110>};
output	Lt	= {false,<56,84; 56,84>};

process leftpart;
    *[ [Rin+]; E+; Ain+; [Rin- & Lt+]; E-; Ain-; [A-] ]
endprocess

process rightpart;
    *[ [D+]; A+; Rout+; [Aout+ & D-]; A-; Rout-; [Aout- & Lt-] ]
endprocess

process Lt;
    *[ [A+]; Lt+; [Aout-]; Lt- ]
endprocess

testbench D;
    *[ [E+]; D+; [E-]; D- ]
endtestbench

testbench leftenv;
    *[ Rin+; [Ain+]; Rin-; [Ain-] ]
endtestbench

testbench rightenv;
    *[ [Rout+]; Aout+; [Rout-]; Aout- ]
endtestbench
endmodule

module main;

input   R0      = {false,<144,inf/*216*/; 80,110>};
input   A5      = {false,<64,96; 64,96>};
input	D1	= {false,<464,696; 72,108>};
input	D2	= {false,<464,696; 72,108>};
input	D3	= {false,<464,696; 72,108>};
input	D4	= {false,<464,696; 72,108>};

elatch elatch1(Rin => R0,Aout => A2,D => D1, Ain => A1, Rout => R1, E => E1,
               A => AA1, Lt => Lt1);

elatch elatch2(Rin => R1,Aout => A3,D => D2, Ain => A2, Rout => R2, E => E2,
               A => AA2, Lt => Lt2);

elatch elatch3(Rin => R2,Aout => A4,D => D3, Ain => A3, Rout => R3, E => E3,
               A => AA3, Lt => Lt3);

elatch elatch4(Rin => R3,Aout => A5,D => D4, Ain => A4, Rout => R4, E => E4,
               A => AA4, Lt => Lt4);

process leftenv;
*[ R0+; [A1+]; R0-; [A1-]]
endprocess

process D1;
    *[ [E1+]; D1+; [E1-]; D1- ]
endprocess

process D2;
    *[ [E2+]; D2+; [E2-]; D2- ]
endprocess

process D3;
    *[ [E3+]; D3+; [E3-]; D3- ]
endprocess

process D4;
    *[ [E4+]; D4+; [E4-]; D4- ]
endprocess

process rightenv;
*[ [R4+]; A5+; [R4-]; A5- ]
endprocess
endmodule
